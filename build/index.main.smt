(set-option :print-success true )
(set-option :produce-models true )
(set-logic ALL )
(define-sort UInt () Int )
(declare-sort Bytes 0 )
(declare-fun bytes0 () Bytes )
(declare-fun bytes (Int ) Bytes )
(define-fun Bytes_toBytes ((b Bytes ) ) Bytes b )
(declare-fun bytesAppend (Bytes Bytes ) Bytes )
(declare-sort Digest 0 )
(declare-fun digest (Bytes ) Digest )
(declare-fun Digest_toBytes (Digest ) Bytes )
(declare-sort Null 0 )
(declare-fun null () Null )
(define-fun Null_toBytes ((n Null ) ) Bytes bytes0 )
(declare-fun Bool_toBytes (Bool ) Bytes )
(declare-fun UInt_toBytes (UInt ) Bytes )
(declare-sort Address 0 )
(declare-fun Address_toBytes (Address ) Bytes )
(declare-sort Token 0 )
(declare-fun Token_toBytes (Token ) Bytes )
(declare-sort Contract 0 )
(declare-fun Contract_toBytes (Contract ) Bytes )
(push 1 ) ;; {
  (declare-datatype T0 ((T0_cons (T0_elem0 Address ) (T0_elem1 Bool ) ) ) )
  (declare-fun T0_toBytes (T0 ) Bytes )
  (declare-datatype T1 ((T1_cons (T1_elem0 Address ) (T1_elem1 UInt ) ) ) )
  (declare-fun T1_toBytes (T1 ) Bytes )
  (declare-datatype T2 ((T2_cons (T2_elem0 Address ) (T2_elem1 Address ) (T2_elem2 UInt ) ) ) )
  (declare-fun T2_toBytes (T2 ) Bytes )
  (declare-datatype T3 ((T3_cons (T3_name Bytes ) (T3_symbol Bytes ) (T3_uri Bytes ) ) ) )
  (declare-fun T3_toBytes (T3 ) Bytes )
  (declare-datatype T4 ((T4_None (T4_None_v Null ) ) (T4_Some (T4_Some_v Bool ) ) ) )
  (declare-fun T4_toBytes (T4 ) Bytes )
  (define-fun T4_inv ((x T4 ) ) Bool (match x (((T4_None x ) true ) ((T4_Some x ) true ) ) ) )
  (declare-datatype T5 ((T5_approve0_113 (T5_approve0_113_v T1 ) ) (T5_safeTransferFrom0_113 (T5_safeTransferFrom0_113_v T2 ) ) (T5_setApprovalForAll0_113 (T5_setApprovalForAll0_113_v T0 ) ) (T5_transferFrom0_113 (T5_transferFrom0_113_v T2 ) ) ) )
  (declare-fun T5_toBytes (T5 ) Bytes )
  (define-fun T5_inv ((x T5 ) ) Bool (match x (((T5_approve0_113 x ) (and true (<= 0 (T1_elem1 x ) ) ) ) ((T5_safeTransferFrom0_113 x ) (and true true (<= 0 (T2_elem2 x ) ) ) ) ((T5_setApprovalForAll0_113 x ) (and true true ) ) ((T5_transferFrom0_113 x ) (and true true (<= 0 (T2_elem2 x ) ) ) ) ) ) )
  (declare-fun map0_0 () (Array Address T4 ) )
  (assert (= map0_0 ((as const (Array Address T4 ) ) (T4_None null ) ) ) )
  (declare-fun dlc_UInt_max () UInt )
  (assert (<= 0 dlc_UInt_max ) )
  (declare-fun address_Creator () Address )
  (assert true )
  (declare-fun address_approve () Address )
  (assert true )
  (declare-fun address_safeTransferFrom () Address )
  (assert true )
  (declare-fun address_setApprovalForAll () Address )
  (assert true )
  (declare-fun address_transferFrom () Address )
  (assert true )
  (push 1 ) ;; {
    (declare-fun v987 () Address )
    (assert true )
    (declare-fun v988 () Address )
    (assert true )
    (declare-fun v989 () Address )
    (assert true )
    (declare-fun v990 () Address )
    (assert true )
    (declare-fun v991 () Address )
    (assert true )
    (declare-fun v480 () T3 )
    (assert (and true true true ) )
    (declare-fun v481 () Bytes )
    (assert true )
    (assert (= v481 (T3_name v480 ) ) )
    (declare-fun v482 () Bytes )
    (assert true )
    (assert (= v482 (T3_symbol v480 ) ) )
    (declare-fun v483 () Bytes )
    (assert true )
    (assert (= v483 (T3_uri v480 ) ) )
    (push 1 ) ;; {
      (pop 1 ) ;; }
    (push 1 ) ;; {
      (declare-fun v484 () Address )
      (assert true )
      (assert (= v484 address_Creator ) )
      (declare-fun v485 () Bytes )
      (assert true )
      (assert (= v485 v481 ) )
      (declare-fun v486 () Bytes )
      (assert true )
      (assert (= v486 v482 ) )
      (declare-fun v487 () Bytes )
      (assert true )
      (assert (= v487 v483 ) )
      (declare-fun pv_net992 () UInt )
      (assert (<= 0 pv_net992 ) )
      (declare-fun pv_tok994 () Token )
      (assert true )
      (declare-fun pv_ks993 () (Array Token UInt ) )
      (assert (<= 0 (select pv_ks993 pv_tok994 ) ) )
      (assert (= pv_net992 0 ) )
      (declare-fun v995 () Address )
      (assert true )
      (declare-fun v996 () Address )
      (assert true )
      (declare-fun v997 () Address )
      (assert true )
      (declare-fun v998 () Address )
      (assert true )
      (declare-fun v999 () Address )
      (assert true )
      (declare-fun v488 () UInt )
      (assert (<= 0 v488 ) )
      (declare-fun v489 () UInt )
      (assert (<= 0 v489 ) )
      (declare-fun v33 () Bool )
      (assert true )
      (assert (= v488 0 ) )
      (assert (= v489 0 ) )
      (push 1 ) ;; {
        (assert (not (= 0 pv_net992 ) ) )
        (check-sat-using (try-for default 10 ) )
        ;; unknown
        (pop 1 ) ;; }
      (assert (= 0 pv_net992 ) )
      (push 1 ) ;; {
        (pop 1 ) ;; }
      (push 1 ) ;; {
        (declare-fun v491 () Address )
        (assert true )
        (assert (= v491 address_Creator ) )
        (declare-fun pv_net1000 () UInt )
        (assert (<= 0 pv_net1000 ) )
        (declare-fun pv_tok1002 () Token )
        (assert true )
        (declare-fun pv_ks1001 () (Array Token UInt ) )
        (assert (<= 0 (select pv_ks1001 pv_tok1002 ) ) )
        (assert (= pv_net1000 0 ) )
        (declare-fun v1003 () Address )
        (assert true )
        (declare-fun v1004 () Address )
        (assert true )
        (declare-fun v1005 () Address )
        (assert true )
        (declare-fun v1006 () Address )
        (assert true )
        (declare-fun v1007 () Address )
        (assert true )
        (declare-fun v492 () UInt )
        (assert (<= 0 v492 ) )
        (declare-fun v493 () UInt )
        (assert (<= 0 v493 ) )
        (declare-fun v39 () Bool )
        (assert true )
        (assert (= v492 (+ v488 1 ) ) )
        (assert (= v493 (+ v489 1 ) ) )
        (push 1 ) ;; {
          (assert (not (= 0 pv_net1000 ) ) )
          (check-sat-using (try-for default 10 ) )
          ;; unsat
          (pop 1 ) ;; }
        (assert (= 0 pv_net1000 ) )
        (declare-fun v495 () Bool )
        (assert true )
        (assert (= v495 (= v484 v491 ) ) )
        (push 1 ) ;; {
          (assert (not v495 ) )
          (check-sat-using (try-for default 10 ) )
          ;; unsat
          (pop 1 ) ;; }
        (assert v495 )
        (push 1 ) ;; {
          (declare-fun v1008 () Address )
          (assert true )
          (declare-fun v1009 () Address )
          (assert true )
          (declare-fun v1010 () Address )
          (assert true )
          (declare-fun v1011 () Address )
          (assert true )
          (declare-fun v1012 () Address )
          (assert true )
          (pop 1 ) ;; }
        (push 1 ) ;; {
          (declare-fun v1013 () Address )
          (assert true )
          (declare-fun v1014 () Address )
          (assert true )
          (declare-fun v1015 () Address )
          (assert true )
          (declare-fun v1016 () Address )
          (assert true )
          (declare-fun v1017 () Address )
          (assert true )
          (pop 1 ) ;; }
        (push 1 ) ;; {
          (declare-fun v1018 () Address )
          (assert true )
          (declare-fun v1019 () Address )
          (assert true )
          (declare-fun v1020 () Address )
          (assert true )
          (declare-fun v1021 () Address )
          (assert true )
          (declare-fun v1022 () Address )
          (assert true )
          (declare-fun v496 () UInt )
          (assert (<= 0 v496 ) )
          (pop 1 ) ;; }
        (push 1 ) ;; {
          (declare-fun v497 () Address )
          (assert true )
          (assert (= v497 v484 ) )
          (declare-fun v498 () Address )
          (assert true )
          (assert (= v498 v484 ) )
          (declare-fun v499 () UInt )
          (assert (<= 0 v499 ) )
          (assert (= v499 v492 ) )
          (declare-fun v500 () UInt )
          (assert (<= 0 v500 ) )
          (assert (= v500 v488 ) )
          (declare-fun v501 () UInt )
          (assert (<= 0 v501 ) )
          (assert (= v501 v488 ) )
          (declare-fun v502 () UInt )
          (assert (<= 0 v502 ) )
          (assert (= v502 v493 ) )
          (declare-fun v503 () UInt )
          (assert (<= 0 v503 ) )
          (assert (= v503 v489 ) )
          (declare-fun v504 () UInt )
          (assert (<= 0 v504 ) )
          (assert (= v504 v489 ) )
          (declare-fun v505 () UInt )
          (assert (<= 0 v505 ) )
          (assert (= v505 0 ) )
          (declare-fun v507 () Bool )
          (assert true )
          (assert (= v507 (= v505 0 ) ) )
          (push 1 ) ;; {
            (assert (not v507 ) )
            (check-sat-using (try-for default 10 ) )
            ;; unsat
            (pop 1 ) ;; }
          (pop 1 ) ;; }
        (push 1 ) ;; {
          (declare-fun map0_1 () (Array Address T4 ) )
          (declare-fun v497 () Address )
          (assert true )
          (declare-fun v498 () Address )
          (assert true )
          (declare-fun v499 () UInt )
          (assert (<= 0 v499 ) )
          (assert (<= v499 dlc_UInt_max ) )
          (declare-fun v500 () UInt )
          (assert (<= 0 v500 ) )
          (assert (<= v500 dlc_UInt_max ) )
          (declare-fun v501 () UInt )
          (assert (<= 0 v501 ) )
          (assert (<= v501 dlc_UInt_max ) )
          (declare-fun v502 () UInt )
          (assert (<= 0 v502 ) )
          (assert (<= v502 dlc_UInt_max ) )
          (declare-fun v503 () UInt )
          (assert (<= 0 v503 ) )
          (assert (<= v503 dlc_UInt_max ) )
          (declare-fun v504 () UInt )
          (assert (<= 0 v504 ) )
          (assert (<= v504 dlc_UInt_max ) )
          (declare-fun v505 () UInt )
          (assert (<= 0 v505 ) )
          (assert (<= v505 dlc_UInt_max ) )
          (declare-fun v507 () Bool )
          (assert true )
          (assert (= v507 (= v505 0 ) ) )
          (assert v507 )
          (assert true )
          (push 1 ) ;; {
            (declare-fun v1024 () Address )
            (assert true )
            (declare-fun v1025 () Address )
            (assert true )
            (declare-fun v1026 () Address )
            (assert true )
            (declare-fun v1027 () Address )
            (assert true )
            (declare-fun v1028 () Address )
            (assert true )
            (declare-fun v508 () UInt )
            (assert (<= 0 v508 ) )
            (declare-fun v509 () Bool )
            (assert true )
            (assert (= v509 (= v508 0 ) ) )
            (assert v509 )
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v1029 () Address )
            (assert true )
            (declare-fun v1030 () Address )
            (assert true )
            (declare-fun v1031 () Address )
            (assert true )
            (declare-fun v1032 () Address )
            (assert true )
            (declare-fun v1033 () Address )
            (assert true )
            (declare-fun v510 () Address )
            (assert true )
            (declare-fun v511 () Bool )
            (assert true )
            (assert (= v511 (= v510 v498 ) ) )
            (declare-fun v512 () UInt )
            (assert (<= 0 v512 ) )
            (assert (= v512 (ite v511 1 0 ) ) )
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v1034 () Address )
            (assert true )
            (declare-fun v1035 () Address )
            (assert true )
            (declare-fun v1036 () Address )
            (assert true )
            (declare-fun v1037 () Address )
            (assert true )
            (declare-fun v1038 () Address )
            (assert true )
            (declare-fun v513 () UInt )
            (assert (<= 0 v513 ) )
            (declare-fun v514 () Bool )
            (assert true )
            (assert (= v514 (= v513 0 ) ) )
            (assert v514 )
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v1039 () Address )
            (assert true )
            (declare-fun v1040 () Address )
            (assert true )
            (declare-fun v1041 () Address )
            (assert true )
            (declare-fun v1042 () Address )
            (assert true )
            (declare-fun v1043 () Address )
            (assert true )
            (declare-fun v515 () Address )
            (assert true )
            (declare-fun v516 () Address )
            (assert true )
            (declare-fun v517 () Bool )
            (assert true )
            (assert (= v517 (= v498 v515 ) ) )
            (declare-fun v518 () T4 )
            (assert (T4_inv v518 ) )
            (assert (= v518 (select map0_1 v516 ) ) )
            (declare-fun v519 () Bool )
            (assert true )
            (assert (= v519 (match v518 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
            (declare-fun v520 () Bool )
            (assert true )
            (assert (= v520 (ite v517 v519 false ) ) )
            (pop 1 ) ;; }
          (declare-fun v527 () UInt )
          (assert (<= 0 v527 ) )
          (assert (= v527 (+ v502 5 ) ) )
          (declare-fun v531 () T2 )
          (assert (and true true (<= 0 (T2_elem2 v531 ) ) ) )
          (declare-fun v532 () Address )
          (assert true )
          (assert (= v532 (T2_elem0 v531 ) ) )
          (declare-fun v534 () UInt )
          (assert (<= 0 v534 ) )
          (assert (= v534 (T2_elem2 v531 ) ) )
          (declare-fun v536 () Bool )
          (assert true )
          (assert (= v536 (= v532 v498 ) ) )
          (declare-fun v537 () Bool )
          (assert true )
          (assert (= v537 (= v532 v497 ) ) )
          (declare-fun v538 () Bool )
          (assert true )
          (assert (= v538 (ite v536 true v537 ) ) )
          (declare-fun v539 () T4 )
          (assert (T4_inv v539 ) )
          (assert (= v539 (select map0_1 v532 ) ) )
          (declare-fun v540 () Bool )
          (assert true )
          (assert (= v540 (match v539 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
          (declare-fun v541 () Bool )
          (assert true )
          (assert (= v541 (ite v538 true v540 ) ) )
          (assert v541 )
          (declare-fun v542 () Bool )
          (assert true )
          (assert (= v542 (= v534 0 ) ) )
          (assert v542 )
          (declare-fun v544 () T5 )
          (assert (T5_inv v544 ) )
          (assert (= v544 (T5_safeTransferFrom0_113 v531 ) ) )
          (declare-fun v548 () T2 )
          (assert (and true true (<= 0 (T2_elem2 v548 ) ) ) )
          (declare-fun v549 () Address )
          (assert true )
          (assert (= v549 (T2_elem0 v548 ) ) )
          (declare-fun v551 () UInt )
          (assert (<= 0 v551 ) )
          (assert (= v551 (T2_elem2 v548 ) ) )
          (declare-fun v553 () Bool )
          (assert true )
          (assert (= v553 (= v549 v498 ) ) )
          (declare-fun v554 () Bool )
          (assert true )
          (assert (= v554 (= v549 v497 ) ) )
          (declare-fun v555 () Bool )
          (assert true )
          (assert (= v555 (ite v553 true v554 ) ) )
          (declare-fun v556 () T4 )
          (assert (T4_inv v556 ) )
          (assert (= v556 (select map0_1 v549 ) ) )
          (declare-fun v557 () Bool )
          (assert true )
          (assert (= v557 (match v556 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
          (declare-fun v558 () Bool )
          (assert true )
          (assert (= v558 (ite v555 true v557 ) ) )
          (assert v558 )
          (declare-fun v559 () Bool )
          (assert true )
          (assert (= v559 (= v551 0 ) ) )
          (assert v559 )
          (declare-fun v561 () T5 )
          (assert (T5_inv v561 ) )
          (assert (= v561 (T5_transferFrom0_113 v548 ) ) )
          (declare-fun v563 () Address )
          (assert true )
          (assert (= v563 v1004 ) )
          (declare-fun v565 () T1 )
          (assert (and true (<= 0 (T1_elem1 v565 ) ) ) )
          (declare-fun v567 () UInt )
          (assert (<= 0 v567 ) )
          (assert (= v567 (T1_elem1 v565 ) ) )
          (declare-fun v569 () Bool )
          (assert true )
          (assert (= v569 (= v563 v498 ) ) )
          (declare-fun v570 () Bool )
          (assert true )
          (assert (= v570 (= v563 v497 ) ) )
          (declare-fun v571 () Bool )
          (assert true )
          (assert (= v571 (ite v569 true v570 ) ) )
          (declare-fun v572 () T4 )
          (assert (T4_inv v572 ) )
          (assert (= v572 (select map0_1 v563 ) ) )
          (declare-fun v573 () Bool )
          (assert true )
          (assert (= v573 (match v572 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
          (declare-fun v574 () Bool )
          (assert true )
          (assert (= v574 (ite v571 true v573 ) ) )
          (assert v574 )
          (declare-fun v575 () Bool )
          (assert true )
          (assert (= v575 (= v567 0 ) ) )
          (assert v575 )
          (declare-fun v577 () T5 )
          (assert (T5_inv v577 ) )
          (assert (= v577 (T5_approve0_113 v565 ) ) )
          (declare-fun v579 () Address )
          (assert true )
          (assert (= v579 v1006 ) )
          (declare-fun v581 () T0 )
          (assert (and true true ) )
          (declare-fun v585 () Bool )
          (assert true )
          (assert (= v585 (= v579 v498 ) ) )
          (declare-fun v586 () Bool )
          (assert true )
          (assert (= v586 (= v579 v497 ) ) )
          (declare-fun v587 () Bool )
          (assert true )
          (assert (= v587 (ite v585 true v586 ) ) )
          (declare-fun v588 () T4 )
          (assert (T4_inv v588 ) )
          (assert (= v588 (select map0_1 v579 ) ) )
          (declare-fun v589 () Bool )
          (assert true )
          (assert (= v589 (match v588 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
          (declare-fun v590 () Bool )
          (assert true )
          (assert (= v590 (ite v587 true v589 ) ) )
          (assert v590 )
          (declare-fun v592 () T5 )
          (assert (T5_inv v592 ) )
          (assert (= v592 (T5_setApprovalForAll0_113 v581 ) ) )
          (push 1 ) ;; {
            (push 1 ) ;; {
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v964 () Address )
              (assert true )
              (assert (= v964 address_Creator ) )
              (declare-fun pv_net1044 () UInt )
              (assert (<= 0 pv_net1044 ) )
              (declare-fun pv_tok1046 () Token )
              (assert true )
              (declare-fun pv_ks1045 () (Array Token UInt ) )
              (assert (<= 0 (select pv_ks1045 pv_tok1046 ) ) )
              (assert (= pv_net1044 0 ) )
              (declare-fun v1047 () Address )
              (assert true )
              (declare-fun v1048 () Address )
              (assert true )
              (declare-fun v1049 () Address )
              (assert true )
              (declare-fun v1050 () Address )
              (assert true )
              (declare-fun v1051 () Address )
              (assert true )
              (declare-fun v965 () UInt )
              (assert (<= 0 v965 ) )
              (declare-fun v966 () UInt )
              (assert (<= 0 v966 ) )
              (declare-fun v445 () Bool )
              (assert true )
              (assert (= v965 (+ v499 1 ) ) )
              (assert (= v966 (+ v502 1 ) ) )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net1044 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net1044 ) )
              (declare-fun v968 () Bool )
              (assert true )
              (assert (= v968 (= v484 v964 ) ) )
              (push 1 ) ;; {
                (assert (not v968 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v968 )
              (declare-fun v1052 () Address )
              (assert true )
              (assert (= v1052 v497 ) )
              (declare-fun v1053 () Address )
              (assert true )
              (assert (= v1053 v498 ) )
              (declare-fun v1054 () UInt )
              (assert (<= 0 v1054 ) )
              (assert (= v1054 v965 ) )
              (declare-fun v1055 () UInt )
              (assert (<= 0 v1055 ) )
              (assert (= v1055 v499 ) )
              (declare-fun v1056 () UInt )
              (assert (<= 0 v1056 ) )
              (assert (= v1056 v499 ) )
              (declare-fun v1057 () UInt )
              (assert (<= 0 v1057 ) )
              (assert (= v1057 v966 ) )
              (declare-fun v1058 () UInt )
              (assert (<= 0 v1058 ) )
              (assert (= v1058 v502 ) )
              (declare-fun v1059 () UInt )
              (assert (<= 0 v1059 ) )
              (assert (= v1059 v527 ) )
              (declare-fun v1060 () UInt )
              (assert (<= 0 v1060 ) )
              (assert (= v1060 v505 ) )
              (declare-fun v1061 () Bool )
              (assert true )
              (assert (= v1061 (= v1060 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1061 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v608 () Address )
            (assert true )
            (assert (= v608 v1004 ) )
            (declare-fun v609 () T5 )
            (assert (T5_inv v609 ) )
            (assert (= v609 v577 ) )
            (declare-fun pv_net1062 () UInt )
            (assert (<= 0 pv_net1062 ) )
            (declare-fun pv_tok1064 () Token )
            (assert true )
            (declare-fun pv_ks1063 () (Array Token UInt ) )
            (assert (<= 0 (select pv_ks1063 pv_tok1064 ) ) )
            (assert (= pv_net1062 0 ) )
            (declare-fun v1065 () Address )
            (assert true )
            (declare-fun v1066 () Address )
            (assert true )
            (declare-fun v1067 () Address )
            (assert true )
            (declare-fun v1068 () Address )
            (assert true )
            (declare-fun v1069 () Address )
            (assert true )
            (declare-fun v610 () UInt )
            (assert (<= 0 v610 ) )
            (declare-fun v611 () UInt )
            (assert (<= 0 v611 ) )
            (declare-fun v338 () Bool )
            (assert true )
            (assert (= v610 (+ v499 1 ) ) )
            (assert (= v611 (+ v502 1 ) ) )
            (push 1 ) ;; {
              (declare-fun v612 () T1 )
              (assert (and true (<= 0 (T1_elem1 v612 ) ) ) )
              (assert (= v609 (T5_approve0_113 v612 ) ) )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net1062 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net1062 ) )
              (declare-fun v632 () Address )
              (assert true )
              (assert (= v632 (T1_elem0 v612 ) ) )
              (declare-fun v633 () UInt )
              (assert (<= 0 v633 ) )
              (assert (= v633 (T1_elem1 v612 ) ) )
              (declare-fun v634 () Bool )
              (assert true )
              (assert (= v634 (= v608 v498 ) ) )
              (declare-fun v635 () Bool )
              (assert true )
              (assert (= v635 (= v608 v497 ) ) )
              (declare-fun v636 () Bool )
              (assert true )
              (assert (= v636 (ite v634 true v635 ) ) )
              (declare-fun v637 () T4 )
              (assert (T4_inv v637 ) )
              (assert (= v637 (select map0_1 v608 ) ) )
              (declare-fun v638 () Bool )
              (assert true )
              (assert (= v638 (match v637 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v639 () Bool )
              (assert true )
              (assert (= v639 (ite v636 true v638 ) ) )
              (push 1 ) ;; {
                (assert (not v639 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v639 )
              (declare-fun v640 () Bool )
              (assert true )
              (assert (= v640 (= v633 0 ) ) )
              (push 1 ) ;; {
                (assert (not v640 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v640 )
              (declare-fun v641 () Bool )
              (assert true )
              (assert (= v641 true ) )
              (declare-fun v642 () Bool )
              (assert true )
              (assert (= v642 v641 ) )
              (declare-fun v1070 () Address )
              (assert true )
              (assert (= v1070 v632 ) )
              (declare-fun v1071 () Address )
              (assert true )
              (assert (= v1071 v498 ) )
              (declare-fun v1072 () UInt )
              (assert (<= 0 v1072 ) )
              (assert (= v1072 v610 ) )
              (declare-fun v1073 () UInt )
              (assert (<= 0 v1073 ) )
              (assert (= v1073 v499 ) )
              (declare-fun v1074 () UInt )
              (assert (<= 0 v1074 ) )
              (assert (= v1074 v499 ) )
              (declare-fun v1075 () UInt )
              (assert (<= 0 v1075 ) )
              (assert (= v1075 v611 ) )
              (declare-fun v1076 () UInt )
              (assert (<= 0 v1076 ) )
              (assert (= v1076 v502 ) )
              (declare-fun v1077 () UInt )
              (assert (<= 0 v1077 ) )
              (assert (= v1077 v527 ) )
              (declare-fun v1078 () UInt )
              (assert (<= 0 v1078 ) )
              (assert (= v1078 v505 ) )
              (declare-fun v1079 () Bool )
              (assert true )
              (assert (= v1079 (= v1078 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1079 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v700 () T2 )
              (assert (and true true (<= 0 (T2_elem2 v700 ) ) ) )
              (assert (= v609 (T5_safeTransferFrom0_113 v700 ) ) )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net1062 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net1062 ) )
              (declare-fun v737 () Address )
              (assert true )
              (assert (= v737 (T2_elem0 v700 ) ) )
              (declare-fun v738 () Address )
              (assert true )
              (assert (= v738 (T2_elem1 v700 ) ) )
              (declare-fun v739 () UInt )
              (assert (<= 0 v739 ) )
              (assert (= v739 (T2_elem2 v700 ) ) )
              (declare-fun v740 () Bool )
              (assert true )
              (assert (= v740 (= v737 v498 ) ) )
              (declare-fun v741 () Bool )
              (assert true )
              (assert (= v741 (= v737 v497 ) ) )
              (declare-fun v742 () Bool )
              (assert true )
              (assert (= v742 (ite v740 true v741 ) ) )
              (declare-fun v743 () T4 )
              (assert (T4_inv v743 ) )
              (assert (= v743 (select map0_1 v737 ) ) )
              (declare-fun v744 () Bool )
              (assert true )
              (assert (= v744 (match v743 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v745 () Bool )
              (assert true )
              (assert (= v745 (ite v742 true v744 ) ) )
              (push 1 ) ;; {
                (assert (not v745 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v745 )
              (declare-fun v746 () Bool )
              (assert true )
              (assert (= v746 (= v739 0 ) ) )
              (push 1 ) ;; {
                (assert (not v746 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v746 )
              (declare-fun v747 () Bool )
              (assert true )
              (assert (= v747 true ) )
              (declare-fun v748 () Bool )
              (assert true )
              (assert (= v748 v747 ) )
              (declare-fun v1080 () Address )
              (assert true )
              (assert (= v1080 v738 ) )
              (declare-fun v1081 () Address )
              (assert true )
              (assert (= v1081 v738 ) )
              (declare-fun v1082 () UInt )
              (assert (<= 0 v1082 ) )
              (assert (= v1082 v610 ) )
              (declare-fun v1083 () UInt )
              (assert (<= 0 v1083 ) )
              (assert (= v1083 v499 ) )
              (declare-fun v1084 () UInt )
              (assert (<= 0 v1084 ) )
              (assert (= v1084 v499 ) )
              (declare-fun v1085 () UInt )
              (assert (<= 0 v1085 ) )
              (assert (= v1085 v611 ) )
              (declare-fun v1086 () UInt )
              (assert (<= 0 v1086 ) )
              (assert (= v1086 v502 ) )
              (declare-fun v1087 () UInt )
              (assert (<= 0 v1087 ) )
              (assert (= v1087 v527 ) )
              (declare-fun v1088 () UInt )
              (assert (<= 0 v1088 ) )
              (assert (= v1088 v505 ) )
              (declare-fun v1089 () Bool )
              (assert true )
              (assert (= v1089 (= v1088 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1089 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v788 () T0 )
              (assert (and true true ) )
              (assert (= v609 (T5_setApprovalForAll0_113 v788 ) ) )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net1062 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net1062 ) )
              (declare-fun v843 () Address )
              (assert true )
              (assert (= v843 (T0_elem0 v788 ) ) )
              (declare-fun v844 () Bool )
              (assert true )
              (assert (= v844 (T0_elem1 v788 ) ) )
              (declare-fun v845 () Bool )
              (assert true )
              (assert (= v845 (= v608 v498 ) ) )
              (declare-fun v846 () Bool )
              (assert true )
              (assert (= v846 (= v608 v497 ) ) )
              (declare-fun v847 () Bool )
              (assert true )
              (assert (= v847 (ite v845 true v846 ) ) )
              (declare-fun v848 () T4 )
              (assert (T4_inv v848 ) )
              (assert (= v848 (select map0_1 v608 ) ) )
              (declare-fun v849 () Bool )
              (assert true )
              (assert (= v849 (match v848 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v850 () Bool )
              (assert true )
              (assert (= v850 (ite v847 true v849 ) ) )
              (push 1 ) ;; {
                (assert (not v850 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v850 )
              (declare-fun v851 () Bool )
              (assert true )
              (assert (= v851 true ) )
              (declare-fun v852 () Bool )
              (assert true )
              (assert (= v852 v851 ) )
              (declare-fun map0_2 () (Array Address T4 ) )
              (assert (= map0_2 (store map0_1 v843 (T4_Some v844 ) ) ) )
              (declare-fun v1091 () Address )
              (assert true )
              (assert (= v1091 v497 ) )
              (declare-fun v1092 () Address )
              (assert true )
              (assert (= v1092 v498 ) )
              (declare-fun v1093 () UInt )
              (assert (<= 0 v1093 ) )
              (assert (= v1093 v610 ) )
              (declare-fun v1094 () UInt )
              (assert (<= 0 v1094 ) )
              (assert (= v1094 v499 ) )
              (declare-fun v1095 () UInt )
              (assert (<= 0 v1095 ) )
              (assert (= v1095 v499 ) )
              (declare-fun v1096 () UInt )
              (assert (<= 0 v1096 ) )
              (assert (= v1096 v611 ) )
              (declare-fun v1097 () UInt )
              (assert (<= 0 v1097 ) )
              (assert (= v1097 v502 ) )
              (declare-fun v1098 () UInt )
              (assert (<= 0 v1098 ) )
              (assert (= v1098 v527 ) )
              (declare-fun v1099 () UInt )
              (assert (<= 0 v1099 ) )
              (assert (= v1099 v505 ) )
              (declare-fun v1100 () Bool )
              (assert true )
              (assert (= v1100 (= v1099 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1100 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v876 () T2 )
              (assert (and true true (<= 0 (T2_elem2 v876 ) ) ) )
              (assert (= v609 (T5_transferFrom0_113 v876 ) ) )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net1062 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net1062 ) )
              (declare-fun v947 () Address )
              (assert true )
              (assert (= v947 (T2_elem0 v876 ) ) )
              (declare-fun v948 () Address )
              (assert true )
              (assert (= v948 (T2_elem1 v876 ) ) )
              (declare-fun v949 () UInt )
              (assert (<= 0 v949 ) )
              (assert (= v949 (T2_elem2 v876 ) ) )
              (declare-fun v950 () Bool )
              (assert true )
              (assert (= v950 (= v947 v498 ) ) )
              (declare-fun v951 () Bool )
              (assert true )
              (assert (= v951 (= v947 v497 ) ) )
              (declare-fun v952 () Bool )
              (assert true )
              (assert (= v952 (ite v950 true v951 ) ) )
              (declare-fun v953 () T4 )
              (assert (T4_inv v953 ) )
              (assert (= v953 (select map0_1 v947 ) ) )
              (declare-fun v954 () Bool )
              (assert true )
              (assert (= v954 (match v953 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v955 () Bool )
              (assert true )
              (assert (= v955 (ite v952 true v954 ) ) )
              (push 1 ) ;; {
                (assert (not v955 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v955 )
              (declare-fun v956 () Bool )
              (assert true )
              (assert (= v956 (= v949 0 ) ) )
              (push 1 ) ;; {
                (assert (not v956 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v956 )
              (declare-fun v957 () Bool )
              (assert true )
              (assert (= v957 true ) )
              (declare-fun v958 () Bool )
              (assert true )
              (assert (= v958 v957 ) )
              (declare-fun v1101 () Address )
              (assert true )
              (assert (= v1101 v948 ) )
              (declare-fun v1102 () Address )
              (assert true )
              (assert (= v1102 v948 ) )
              (declare-fun v1103 () UInt )
              (assert (<= 0 v1103 ) )
              (assert (= v1103 v610 ) )
              (declare-fun v1104 () UInt )
              (assert (<= 0 v1104 ) )
              (assert (= v1104 v499 ) )
              (declare-fun v1105 () UInt )
              (assert (<= 0 v1105 ) )
              (assert (= v1105 v499 ) )
              (declare-fun v1106 () UInt )
              (assert (<= 0 v1106 ) )
              (assert (= v1106 v611 ) )
              (declare-fun v1107 () UInt )
              (assert (<= 0 v1107 ) )
              (assert (= v1107 v502 ) )
              (declare-fun v1108 () UInt )
              (assert (<= 0 v1108 ) )
              (assert (= v1108 v527 ) )
              (declare-fun v1109 () UInt )
              (assert (<= 0 v1109 ) )
              (assert (= v1109 v505 ) )
              (declare-fun v1110 () Bool )
              (assert true )
              (assert (= v1110 (= v1109 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1110 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v608 () Address )
            (assert true )
            (assert (= v608 v1005 ) )
            (declare-fun v609 () T5 )
            (assert (T5_inv v609 ) )
            (assert (= v609 v544 ) )
            (declare-fun pv_net1111 () UInt )
            (assert (<= 0 pv_net1111 ) )
            (declare-fun pv_tok1113 () Token )
            (assert true )
            (declare-fun pv_ks1112 () (Array Token UInt ) )
            (assert (<= 0 (select pv_ks1112 pv_tok1113 ) ) )
            (assert (= pv_net1111 0 ) )
            (declare-fun v1114 () Address )
            (assert true )
            (declare-fun v1115 () Address )
            (assert true )
            (declare-fun v1116 () Address )
            (assert true )
            (declare-fun v1117 () Address )
            (assert true )
            (declare-fun v1118 () Address )
            (assert true )
            (declare-fun v610 () UInt )
            (assert (<= 0 v610 ) )
            (declare-fun v611 () UInt )
            (assert (<= 0 v611 ) )
            (declare-fun v338 () Bool )
            (assert true )
            (assert (= v610 (+ v499 1 ) ) )
            (assert (= v611 (+ v502 1 ) ) )
            (push 1 ) ;; {
              (declare-fun v612 () T1 )
              (assert (and true (<= 0 (T1_elem1 v612 ) ) ) )
              (assert (= v609 (T5_approve0_113 v612 ) ) )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net1111 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net1111 ) )
              (declare-fun v632 () Address )
              (assert true )
              (assert (= v632 (T1_elem0 v612 ) ) )
              (declare-fun v633 () UInt )
              (assert (<= 0 v633 ) )
              (assert (= v633 (T1_elem1 v612 ) ) )
              (declare-fun v634 () Bool )
              (assert true )
              (assert (= v634 (= v608 v498 ) ) )
              (declare-fun v635 () Bool )
              (assert true )
              (assert (= v635 (= v608 v497 ) ) )
              (declare-fun v636 () Bool )
              (assert true )
              (assert (= v636 (ite v634 true v635 ) ) )
              (declare-fun v637 () T4 )
              (assert (T4_inv v637 ) )
              (assert (= v637 (select map0_1 v608 ) ) )
              (declare-fun v638 () Bool )
              (assert true )
              (assert (= v638 (match v637 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v639 () Bool )
              (assert true )
              (assert (= v639 (ite v636 true v638 ) ) )
              (push 1 ) ;; {
                (assert (not v639 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v639 )
              (declare-fun v640 () Bool )
              (assert true )
              (assert (= v640 (= v633 0 ) ) )
              (push 1 ) ;; {
                (assert (not v640 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v640 )
              (declare-fun v641 () Bool )
              (assert true )
              (assert (= v641 true ) )
              (declare-fun v642 () Bool )
              (assert true )
              (assert (= v642 v641 ) )
              (declare-fun v1119 () Address )
              (assert true )
              (assert (= v1119 v632 ) )
              (declare-fun v1120 () Address )
              (assert true )
              (assert (= v1120 v498 ) )
              (declare-fun v1121 () UInt )
              (assert (<= 0 v1121 ) )
              (assert (= v1121 v610 ) )
              (declare-fun v1122 () UInt )
              (assert (<= 0 v1122 ) )
              (assert (= v1122 v499 ) )
              (declare-fun v1123 () UInt )
              (assert (<= 0 v1123 ) )
              (assert (= v1123 v499 ) )
              (declare-fun v1124 () UInt )
              (assert (<= 0 v1124 ) )
              (assert (= v1124 v611 ) )
              (declare-fun v1125 () UInt )
              (assert (<= 0 v1125 ) )
              (assert (= v1125 v502 ) )
              (declare-fun v1126 () UInt )
              (assert (<= 0 v1126 ) )
              (assert (= v1126 v527 ) )
              (declare-fun v1127 () UInt )
              (assert (<= 0 v1127 ) )
              (assert (= v1127 v505 ) )
              (declare-fun v1128 () Bool )
              (assert true )
              (assert (= v1128 (= v1127 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1128 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v700 () T2 )
              (assert (and true true (<= 0 (T2_elem2 v700 ) ) ) )
              (assert (= v609 (T5_safeTransferFrom0_113 v700 ) ) )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net1111 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net1111 ) )
              (declare-fun v737 () Address )
              (assert true )
              (assert (= v737 (T2_elem0 v700 ) ) )
              (declare-fun v738 () Address )
              (assert true )
              (assert (= v738 (T2_elem1 v700 ) ) )
              (declare-fun v739 () UInt )
              (assert (<= 0 v739 ) )
              (assert (= v739 (T2_elem2 v700 ) ) )
              (declare-fun v740 () Bool )
              (assert true )
              (assert (= v740 (= v737 v498 ) ) )
              (declare-fun v741 () Bool )
              (assert true )
              (assert (= v741 (= v737 v497 ) ) )
              (declare-fun v742 () Bool )
              (assert true )
              (assert (= v742 (ite v740 true v741 ) ) )
              (declare-fun v743 () T4 )
              (assert (T4_inv v743 ) )
              (assert (= v743 (select map0_1 v737 ) ) )
              (declare-fun v744 () Bool )
              (assert true )
              (assert (= v744 (match v743 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v745 () Bool )
              (assert true )
              (assert (= v745 (ite v742 true v744 ) ) )
              (push 1 ) ;; {
                (assert (not v745 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v745 )
              (declare-fun v746 () Bool )
              (assert true )
              (assert (= v746 (= v739 0 ) ) )
              (push 1 ) ;; {
                (assert (not v746 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v746 )
              (declare-fun v747 () Bool )
              (assert true )
              (assert (= v747 true ) )
              (declare-fun v748 () Bool )
              (assert true )
              (assert (= v748 v747 ) )
              (declare-fun v1129 () Address )
              (assert true )
              (assert (= v1129 v738 ) )
              (declare-fun v1130 () Address )
              (assert true )
              (assert (= v1130 v738 ) )
              (declare-fun v1131 () UInt )
              (assert (<= 0 v1131 ) )
              (assert (= v1131 v610 ) )
              (declare-fun v1132 () UInt )
              (assert (<= 0 v1132 ) )
              (assert (= v1132 v499 ) )
              (declare-fun v1133 () UInt )
              (assert (<= 0 v1133 ) )
              (assert (= v1133 v499 ) )
              (declare-fun v1134 () UInt )
              (assert (<= 0 v1134 ) )
              (assert (= v1134 v611 ) )
              (declare-fun v1135 () UInt )
              (assert (<= 0 v1135 ) )
              (assert (= v1135 v502 ) )
              (declare-fun v1136 () UInt )
              (assert (<= 0 v1136 ) )
              (assert (= v1136 v527 ) )
              (declare-fun v1137 () UInt )
              (assert (<= 0 v1137 ) )
              (assert (= v1137 v505 ) )
              (declare-fun v1138 () Bool )
              (assert true )
              (assert (= v1138 (= v1137 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1138 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v788 () T0 )
              (assert (and true true ) )
              (assert (= v609 (T5_setApprovalForAll0_113 v788 ) ) )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net1111 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net1111 ) )
              (declare-fun v843 () Address )
              (assert true )
              (assert (= v843 (T0_elem0 v788 ) ) )
              (declare-fun v844 () Bool )
              (assert true )
              (assert (= v844 (T0_elem1 v788 ) ) )
              (declare-fun v845 () Bool )
              (assert true )
              (assert (= v845 (= v608 v498 ) ) )
              (declare-fun v846 () Bool )
              (assert true )
              (assert (= v846 (= v608 v497 ) ) )
              (declare-fun v847 () Bool )
              (assert true )
              (assert (= v847 (ite v845 true v846 ) ) )
              (declare-fun v848 () T4 )
              (assert (T4_inv v848 ) )
              (assert (= v848 (select map0_1 v608 ) ) )
              (declare-fun v849 () Bool )
              (assert true )
              (assert (= v849 (match v848 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v850 () Bool )
              (assert true )
              (assert (= v850 (ite v847 true v849 ) ) )
              (push 1 ) ;; {
                (assert (not v850 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v850 )
              (declare-fun v851 () Bool )
              (assert true )
              (assert (= v851 true ) )
              (declare-fun v852 () Bool )
              (assert true )
              (assert (= v852 v851 ) )
              (declare-fun map0_2 () (Array Address T4 ) )
              (assert (= map0_2 (store map0_1 v843 (T4_Some v844 ) ) ) )
              (declare-fun v1140 () Address )
              (assert true )
              (assert (= v1140 v497 ) )
              (declare-fun v1141 () Address )
              (assert true )
              (assert (= v1141 v498 ) )
              (declare-fun v1142 () UInt )
              (assert (<= 0 v1142 ) )
              (assert (= v1142 v610 ) )
              (declare-fun v1143 () UInt )
              (assert (<= 0 v1143 ) )
              (assert (= v1143 v499 ) )
              (declare-fun v1144 () UInt )
              (assert (<= 0 v1144 ) )
              (assert (= v1144 v499 ) )
              (declare-fun v1145 () UInt )
              (assert (<= 0 v1145 ) )
              (assert (= v1145 v611 ) )
              (declare-fun v1146 () UInt )
              (assert (<= 0 v1146 ) )
              (assert (= v1146 v502 ) )
              (declare-fun v1147 () UInt )
              (assert (<= 0 v1147 ) )
              (assert (= v1147 v527 ) )
              (declare-fun v1148 () UInt )
              (assert (<= 0 v1148 ) )
              (assert (= v1148 v505 ) )
              (declare-fun v1149 () Bool )
              (assert true )
              (assert (= v1149 (= v1148 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1149 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v876 () T2 )
              (assert (and true true (<= 0 (T2_elem2 v876 ) ) ) )
              (assert (= v609 (T5_transferFrom0_113 v876 ) ) )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net1111 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net1111 ) )
              (declare-fun v947 () Address )
              (assert true )
              (assert (= v947 (T2_elem0 v876 ) ) )
              (declare-fun v948 () Address )
              (assert true )
              (assert (= v948 (T2_elem1 v876 ) ) )
              (declare-fun v949 () UInt )
              (assert (<= 0 v949 ) )
              (assert (= v949 (T2_elem2 v876 ) ) )
              (declare-fun v950 () Bool )
              (assert true )
              (assert (= v950 (= v947 v498 ) ) )
              (declare-fun v951 () Bool )
              (assert true )
              (assert (= v951 (= v947 v497 ) ) )
              (declare-fun v952 () Bool )
              (assert true )
              (assert (= v952 (ite v950 true v951 ) ) )
              (declare-fun v953 () T4 )
              (assert (T4_inv v953 ) )
              (assert (= v953 (select map0_1 v947 ) ) )
              (declare-fun v954 () Bool )
              (assert true )
              (assert (= v954 (match v953 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v955 () Bool )
              (assert true )
              (assert (= v955 (ite v952 true v954 ) ) )
              (push 1 ) ;; {
                (assert (not v955 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v955 )
              (declare-fun v956 () Bool )
              (assert true )
              (assert (= v956 (= v949 0 ) ) )
              (push 1 ) ;; {
                (assert (not v956 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v956 )
              (declare-fun v957 () Bool )
              (assert true )
              (assert (= v957 true ) )
              (declare-fun v958 () Bool )
              (assert true )
              (assert (= v958 v957 ) )
              (declare-fun v1150 () Address )
              (assert true )
              (assert (= v1150 v948 ) )
              (declare-fun v1151 () Address )
              (assert true )
              (assert (= v1151 v948 ) )
              (declare-fun v1152 () UInt )
              (assert (<= 0 v1152 ) )
              (assert (= v1152 v610 ) )
              (declare-fun v1153 () UInt )
              (assert (<= 0 v1153 ) )
              (assert (= v1153 v499 ) )
              (declare-fun v1154 () UInt )
              (assert (<= 0 v1154 ) )
              (assert (= v1154 v499 ) )
              (declare-fun v1155 () UInt )
              (assert (<= 0 v1155 ) )
              (assert (= v1155 v611 ) )
              (declare-fun v1156 () UInt )
              (assert (<= 0 v1156 ) )
              (assert (= v1156 v502 ) )
              (declare-fun v1157 () UInt )
              (assert (<= 0 v1157 ) )
              (assert (= v1157 v527 ) )
              (declare-fun v1158 () UInt )
              (assert (<= 0 v1158 ) )
              (assert (= v1158 v505 ) )
              (declare-fun v1159 () Bool )
              (assert true )
              (assert (= v1159 (= v1158 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1159 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v608 () Address )
            (assert true )
            (assert (= v608 v1006 ) )
            (declare-fun v609 () T5 )
            (assert (T5_inv v609 ) )
            (assert (= v609 v592 ) )
            (declare-fun pv_net1160 () UInt )
            (assert (<= 0 pv_net1160 ) )
            (declare-fun pv_tok1162 () Token )
            (assert true )
            (declare-fun pv_ks1161 () (Array Token UInt ) )
            (assert (<= 0 (select pv_ks1161 pv_tok1162 ) ) )
            (assert (= pv_net1160 0 ) )
            (declare-fun v1163 () Address )
            (assert true )
            (declare-fun v1164 () Address )
            (assert true )
            (declare-fun v1165 () Address )
            (assert true )
            (declare-fun v1166 () Address )
            (assert true )
            (declare-fun v1167 () Address )
            (assert true )
            (declare-fun v610 () UInt )
            (assert (<= 0 v610 ) )
            (declare-fun v611 () UInt )
            (assert (<= 0 v611 ) )
            (declare-fun v338 () Bool )
            (assert true )
            (assert (= v610 (+ v499 1 ) ) )
            (assert (= v611 (+ v502 1 ) ) )
            (push 1 ) ;; {
              (declare-fun v612 () T1 )
              (assert (and true (<= 0 (T1_elem1 v612 ) ) ) )
              (assert (= v609 (T5_approve0_113 v612 ) ) )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net1160 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net1160 ) )
              (declare-fun v632 () Address )
              (assert true )
              (assert (= v632 (T1_elem0 v612 ) ) )
              (declare-fun v633 () UInt )
              (assert (<= 0 v633 ) )
              (assert (= v633 (T1_elem1 v612 ) ) )
              (declare-fun v634 () Bool )
              (assert true )
              (assert (= v634 (= v608 v498 ) ) )
              (declare-fun v635 () Bool )
              (assert true )
              (assert (= v635 (= v608 v497 ) ) )
              (declare-fun v636 () Bool )
              (assert true )
              (assert (= v636 (ite v634 true v635 ) ) )
              (declare-fun v637 () T4 )
              (assert (T4_inv v637 ) )
              (assert (= v637 (select map0_1 v608 ) ) )
              (declare-fun v638 () Bool )
              (assert true )
              (assert (= v638 (match v637 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v639 () Bool )
              (assert true )
              (assert (= v639 (ite v636 true v638 ) ) )
              (push 1 ) ;; {
                (assert (not v639 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v639 )
              (declare-fun v640 () Bool )
              (assert true )
              (assert (= v640 (= v633 0 ) ) )
              (push 1 ) ;; {
                (assert (not v640 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v640 )
              (declare-fun v641 () Bool )
              (assert true )
              (assert (= v641 true ) )
              (declare-fun v642 () Bool )
              (assert true )
              (assert (= v642 v641 ) )
              (declare-fun v1168 () Address )
              (assert true )
              (assert (= v1168 v632 ) )
              (declare-fun v1169 () Address )
              (assert true )
              (assert (= v1169 v498 ) )
              (declare-fun v1170 () UInt )
              (assert (<= 0 v1170 ) )
              (assert (= v1170 v610 ) )
              (declare-fun v1171 () UInt )
              (assert (<= 0 v1171 ) )
              (assert (= v1171 v499 ) )
              (declare-fun v1172 () UInt )
              (assert (<= 0 v1172 ) )
              (assert (= v1172 v499 ) )
              (declare-fun v1173 () UInt )
              (assert (<= 0 v1173 ) )
              (assert (= v1173 v611 ) )
              (declare-fun v1174 () UInt )
              (assert (<= 0 v1174 ) )
              (assert (= v1174 v502 ) )
              (declare-fun v1175 () UInt )
              (assert (<= 0 v1175 ) )
              (assert (= v1175 v527 ) )
              (declare-fun v1176 () UInt )
              (assert (<= 0 v1176 ) )
              (assert (= v1176 v505 ) )
              (declare-fun v1177 () Bool )
              (assert true )
              (assert (= v1177 (= v1176 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1177 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v700 () T2 )
              (assert (and true true (<= 0 (T2_elem2 v700 ) ) ) )
              (assert (= v609 (T5_safeTransferFrom0_113 v700 ) ) )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net1160 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net1160 ) )
              (declare-fun v737 () Address )
              (assert true )
              (assert (= v737 (T2_elem0 v700 ) ) )
              (declare-fun v738 () Address )
              (assert true )
              (assert (= v738 (T2_elem1 v700 ) ) )
              (declare-fun v739 () UInt )
              (assert (<= 0 v739 ) )
              (assert (= v739 (T2_elem2 v700 ) ) )
              (declare-fun v740 () Bool )
              (assert true )
              (assert (= v740 (= v737 v498 ) ) )
              (declare-fun v741 () Bool )
              (assert true )
              (assert (= v741 (= v737 v497 ) ) )
              (declare-fun v742 () Bool )
              (assert true )
              (assert (= v742 (ite v740 true v741 ) ) )
              (declare-fun v743 () T4 )
              (assert (T4_inv v743 ) )
              (assert (= v743 (select map0_1 v737 ) ) )
              (declare-fun v744 () Bool )
              (assert true )
              (assert (= v744 (match v743 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v745 () Bool )
              (assert true )
              (assert (= v745 (ite v742 true v744 ) ) )
              (push 1 ) ;; {
                (assert (not v745 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v745 )
              (declare-fun v746 () Bool )
              (assert true )
              (assert (= v746 (= v739 0 ) ) )
              (push 1 ) ;; {
                (assert (not v746 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v746 )
              (declare-fun v747 () Bool )
              (assert true )
              (assert (= v747 true ) )
              (declare-fun v748 () Bool )
              (assert true )
              (assert (= v748 v747 ) )
              (declare-fun v1178 () Address )
              (assert true )
              (assert (= v1178 v738 ) )
              (declare-fun v1179 () Address )
              (assert true )
              (assert (= v1179 v738 ) )
              (declare-fun v1180 () UInt )
              (assert (<= 0 v1180 ) )
              (assert (= v1180 v610 ) )
              (declare-fun v1181 () UInt )
              (assert (<= 0 v1181 ) )
              (assert (= v1181 v499 ) )
              (declare-fun v1182 () UInt )
              (assert (<= 0 v1182 ) )
              (assert (= v1182 v499 ) )
              (declare-fun v1183 () UInt )
              (assert (<= 0 v1183 ) )
              (assert (= v1183 v611 ) )
              (declare-fun v1184 () UInt )
              (assert (<= 0 v1184 ) )
              (assert (= v1184 v502 ) )
              (declare-fun v1185 () UInt )
              (assert (<= 0 v1185 ) )
              (assert (= v1185 v527 ) )
              (declare-fun v1186 () UInt )
              (assert (<= 0 v1186 ) )
              (assert (= v1186 v505 ) )
              (declare-fun v1187 () Bool )
              (assert true )
              (assert (= v1187 (= v1186 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1187 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v788 () T0 )
              (assert (and true true ) )
              (assert (= v609 (T5_setApprovalForAll0_113 v788 ) ) )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net1160 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net1160 ) )
              (declare-fun v843 () Address )
              (assert true )
              (assert (= v843 (T0_elem0 v788 ) ) )
              (declare-fun v844 () Bool )
              (assert true )
              (assert (= v844 (T0_elem1 v788 ) ) )
              (declare-fun v845 () Bool )
              (assert true )
              (assert (= v845 (= v608 v498 ) ) )
              (declare-fun v846 () Bool )
              (assert true )
              (assert (= v846 (= v608 v497 ) ) )
              (declare-fun v847 () Bool )
              (assert true )
              (assert (= v847 (ite v845 true v846 ) ) )
              (declare-fun v848 () T4 )
              (assert (T4_inv v848 ) )
              (assert (= v848 (select map0_1 v608 ) ) )
              (declare-fun v849 () Bool )
              (assert true )
              (assert (= v849 (match v848 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v850 () Bool )
              (assert true )
              (assert (= v850 (ite v847 true v849 ) ) )
              (push 1 ) ;; {
                (assert (not v850 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v850 )
              (declare-fun v851 () Bool )
              (assert true )
              (assert (= v851 true ) )
              (declare-fun v852 () Bool )
              (assert true )
              (assert (= v852 v851 ) )
              (declare-fun map0_2 () (Array Address T4 ) )
              (assert (= map0_2 (store map0_1 v843 (T4_Some v844 ) ) ) )
              (declare-fun v1189 () Address )
              (assert true )
              (assert (= v1189 v497 ) )
              (declare-fun v1190 () Address )
              (assert true )
              (assert (= v1190 v498 ) )
              (declare-fun v1191 () UInt )
              (assert (<= 0 v1191 ) )
              (assert (= v1191 v610 ) )
              (declare-fun v1192 () UInt )
              (assert (<= 0 v1192 ) )
              (assert (= v1192 v499 ) )
              (declare-fun v1193 () UInt )
              (assert (<= 0 v1193 ) )
              (assert (= v1193 v499 ) )
              (declare-fun v1194 () UInt )
              (assert (<= 0 v1194 ) )
              (assert (= v1194 v611 ) )
              (declare-fun v1195 () UInt )
              (assert (<= 0 v1195 ) )
              (assert (= v1195 v502 ) )
              (declare-fun v1196 () UInt )
              (assert (<= 0 v1196 ) )
              (assert (= v1196 v527 ) )
              (declare-fun v1197 () UInt )
              (assert (<= 0 v1197 ) )
              (assert (= v1197 v505 ) )
              (declare-fun v1198 () Bool )
              (assert true )
              (assert (= v1198 (= v1197 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1198 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v876 () T2 )
              (assert (and true true (<= 0 (T2_elem2 v876 ) ) ) )
              (assert (= v609 (T5_transferFrom0_113 v876 ) ) )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net1160 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net1160 ) )
              (declare-fun v947 () Address )
              (assert true )
              (assert (= v947 (T2_elem0 v876 ) ) )
              (declare-fun v948 () Address )
              (assert true )
              (assert (= v948 (T2_elem1 v876 ) ) )
              (declare-fun v949 () UInt )
              (assert (<= 0 v949 ) )
              (assert (= v949 (T2_elem2 v876 ) ) )
              (declare-fun v950 () Bool )
              (assert true )
              (assert (= v950 (= v947 v498 ) ) )
              (declare-fun v951 () Bool )
              (assert true )
              (assert (= v951 (= v947 v497 ) ) )
              (declare-fun v952 () Bool )
              (assert true )
              (assert (= v952 (ite v950 true v951 ) ) )
              (declare-fun v953 () T4 )
              (assert (T4_inv v953 ) )
              (assert (= v953 (select map0_1 v947 ) ) )
              (declare-fun v954 () Bool )
              (assert true )
              (assert (= v954 (match v953 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v955 () Bool )
              (assert true )
              (assert (= v955 (ite v952 true v954 ) ) )
              (push 1 ) ;; {
                (assert (not v955 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v955 )
              (declare-fun v956 () Bool )
              (assert true )
              (assert (= v956 (= v949 0 ) ) )
              (push 1 ) ;; {
                (assert (not v956 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v956 )
              (declare-fun v957 () Bool )
              (assert true )
              (assert (= v957 true ) )
              (declare-fun v958 () Bool )
              (assert true )
              (assert (= v958 v957 ) )
              (declare-fun v1199 () Address )
              (assert true )
              (assert (= v1199 v948 ) )
              (declare-fun v1200 () Address )
              (assert true )
              (assert (= v1200 v948 ) )
              (declare-fun v1201 () UInt )
              (assert (<= 0 v1201 ) )
              (assert (= v1201 v610 ) )
              (declare-fun v1202 () UInt )
              (assert (<= 0 v1202 ) )
              (assert (= v1202 v499 ) )
              (declare-fun v1203 () UInt )
              (assert (<= 0 v1203 ) )
              (assert (= v1203 v499 ) )
              (declare-fun v1204 () UInt )
              (assert (<= 0 v1204 ) )
              (assert (= v1204 v611 ) )
              (declare-fun v1205 () UInt )
              (assert (<= 0 v1205 ) )
              (assert (= v1205 v502 ) )
              (declare-fun v1206 () UInt )
              (assert (<= 0 v1206 ) )
              (assert (= v1206 v527 ) )
              (declare-fun v1207 () UInt )
              (assert (<= 0 v1207 ) )
              (assert (= v1207 v505 ) )
              (declare-fun v1208 () Bool )
              (assert true )
              (assert (= v1208 (= v1207 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1208 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v608 () Address )
            (assert true )
            (assert (= v608 v1007 ) )
            (declare-fun v609 () T5 )
            (assert (T5_inv v609 ) )
            (assert (= v609 v561 ) )
            (declare-fun pv_net1209 () UInt )
            (assert (<= 0 pv_net1209 ) )
            (declare-fun pv_tok1211 () Token )
            (assert true )
            (declare-fun pv_ks1210 () (Array Token UInt ) )
            (assert (<= 0 (select pv_ks1210 pv_tok1211 ) ) )
            (assert (= pv_net1209 0 ) )
            (declare-fun v1212 () Address )
            (assert true )
            (declare-fun v1213 () Address )
            (assert true )
            (declare-fun v1214 () Address )
            (assert true )
            (declare-fun v1215 () Address )
            (assert true )
            (declare-fun v1216 () Address )
            (assert true )
            (declare-fun v610 () UInt )
            (assert (<= 0 v610 ) )
            (declare-fun v611 () UInt )
            (assert (<= 0 v611 ) )
            (declare-fun v338 () Bool )
            (assert true )
            (assert (= v610 (+ v499 1 ) ) )
            (assert (= v611 (+ v502 1 ) ) )
            (push 1 ) ;; {
              (declare-fun v612 () T1 )
              (assert (and true (<= 0 (T1_elem1 v612 ) ) ) )
              (assert (= v609 (T5_approve0_113 v612 ) ) )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net1209 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net1209 ) )
              (declare-fun v632 () Address )
              (assert true )
              (assert (= v632 (T1_elem0 v612 ) ) )
              (declare-fun v633 () UInt )
              (assert (<= 0 v633 ) )
              (assert (= v633 (T1_elem1 v612 ) ) )
              (declare-fun v634 () Bool )
              (assert true )
              (assert (= v634 (= v608 v498 ) ) )
              (declare-fun v635 () Bool )
              (assert true )
              (assert (= v635 (= v608 v497 ) ) )
              (declare-fun v636 () Bool )
              (assert true )
              (assert (= v636 (ite v634 true v635 ) ) )
              (declare-fun v637 () T4 )
              (assert (T4_inv v637 ) )
              (assert (= v637 (select map0_1 v608 ) ) )
              (declare-fun v638 () Bool )
              (assert true )
              (assert (= v638 (match v637 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v639 () Bool )
              (assert true )
              (assert (= v639 (ite v636 true v638 ) ) )
              (push 1 ) ;; {
                (assert (not v639 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v639 )
              (declare-fun v640 () Bool )
              (assert true )
              (assert (= v640 (= v633 0 ) ) )
              (push 1 ) ;; {
                (assert (not v640 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v640 )
              (declare-fun v641 () Bool )
              (assert true )
              (assert (= v641 true ) )
              (declare-fun v642 () Bool )
              (assert true )
              (assert (= v642 v641 ) )
              (declare-fun v1217 () Address )
              (assert true )
              (assert (= v1217 v632 ) )
              (declare-fun v1218 () Address )
              (assert true )
              (assert (= v1218 v498 ) )
              (declare-fun v1219 () UInt )
              (assert (<= 0 v1219 ) )
              (assert (= v1219 v610 ) )
              (declare-fun v1220 () UInt )
              (assert (<= 0 v1220 ) )
              (assert (= v1220 v499 ) )
              (declare-fun v1221 () UInt )
              (assert (<= 0 v1221 ) )
              (assert (= v1221 v499 ) )
              (declare-fun v1222 () UInt )
              (assert (<= 0 v1222 ) )
              (assert (= v1222 v611 ) )
              (declare-fun v1223 () UInt )
              (assert (<= 0 v1223 ) )
              (assert (= v1223 v502 ) )
              (declare-fun v1224 () UInt )
              (assert (<= 0 v1224 ) )
              (assert (= v1224 v527 ) )
              (declare-fun v1225 () UInt )
              (assert (<= 0 v1225 ) )
              (assert (= v1225 v505 ) )
              (declare-fun v1226 () Bool )
              (assert true )
              (assert (= v1226 (= v1225 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1226 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v700 () T2 )
              (assert (and true true (<= 0 (T2_elem2 v700 ) ) ) )
              (assert (= v609 (T5_safeTransferFrom0_113 v700 ) ) )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net1209 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net1209 ) )
              (declare-fun v737 () Address )
              (assert true )
              (assert (= v737 (T2_elem0 v700 ) ) )
              (declare-fun v738 () Address )
              (assert true )
              (assert (= v738 (T2_elem1 v700 ) ) )
              (declare-fun v739 () UInt )
              (assert (<= 0 v739 ) )
              (assert (= v739 (T2_elem2 v700 ) ) )
              (declare-fun v740 () Bool )
              (assert true )
              (assert (= v740 (= v737 v498 ) ) )
              (declare-fun v741 () Bool )
              (assert true )
              (assert (= v741 (= v737 v497 ) ) )
              (declare-fun v742 () Bool )
              (assert true )
              (assert (= v742 (ite v740 true v741 ) ) )
              (declare-fun v743 () T4 )
              (assert (T4_inv v743 ) )
              (assert (= v743 (select map0_1 v737 ) ) )
              (declare-fun v744 () Bool )
              (assert true )
              (assert (= v744 (match v743 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v745 () Bool )
              (assert true )
              (assert (= v745 (ite v742 true v744 ) ) )
              (push 1 ) ;; {
                (assert (not v745 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v745 )
              (declare-fun v746 () Bool )
              (assert true )
              (assert (= v746 (= v739 0 ) ) )
              (push 1 ) ;; {
                (assert (not v746 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v746 )
              (declare-fun v747 () Bool )
              (assert true )
              (assert (= v747 true ) )
              (declare-fun v748 () Bool )
              (assert true )
              (assert (= v748 v747 ) )
              (declare-fun v1227 () Address )
              (assert true )
              (assert (= v1227 v738 ) )
              (declare-fun v1228 () Address )
              (assert true )
              (assert (= v1228 v738 ) )
              (declare-fun v1229 () UInt )
              (assert (<= 0 v1229 ) )
              (assert (= v1229 v610 ) )
              (declare-fun v1230 () UInt )
              (assert (<= 0 v1230 ) )
              (assert (= v1230 v499 ) )
              (declare-fun v1231 () UInt )
              (assert (<= 0 v1231 ) )
              (assert (= v1231 v499 ) )
              (declare-fun v1232 () UInt )
              (assert (<= 0 v1232 ) )
              (assert (= v1232 v611 ) )
              (declare-fun v1233 () UInt )
              (assert (<= 0 v1233 ) )
              (assert (= v1233 v502 ) )
              (declare-fun v1234 () UInt )
              (assert (<= 0 v1234 ) )
              (assert (= v1234 v527 ) )
              (declare-fun v1235 () UInt )
              (assert (<= 0 v1235 ) )
              (assert (= v1235 v505 ) )
              (declare-fun v1236 () Bool )
              (assert true )
              (assert (= v1236 (= v1235 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1236 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v788 () T0 )
              (assert (and true true ) )
              (assert (= v609 (T5_setApprovalForAll0_113 v788 ) ) )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net1209 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net1209 ) )
              (declare-fun v843 () Address )
              (assert true )
              (assert (= v843 (T0_elem0 v788 ) ) )
              (declare-fun v844 () Bool )
              (assert true )
              (assert (= v844 (T0_elem1 v788 ) ) )
              (declare-fun v845 () Bool )
              (assert true )
              (assert (= v845 (= v608 v498 ) ) )
              (declare-fun v846 () Bool )
              (assert true )
              (assert (= v846 (= v608 v497 ) ) )
              (declare-fun v847 () Bool )
              (assert true )
              (assert (= v847 (ite v845 true v846 ) ) )
              (declare-fun v848 () T4 )
              (assert (T4_inv v848 ) )
              (assert (= v848 (select map0_1 v608 ) ) )
              (declare-fun v849 () Bool )
              (assert true )
              (assert (= v849 (match v848 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v850 () Bool )
              (assert true )
              (assert (= v850 (ite v847 true v849 ) ) )
              (push 1 ) ;; {
                (assert (not v850 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v850 )
              (declare-fun v851 () Bool )
              (assert true )
              (assert (= v851 true ) )
              (declare-fun v852 () Bool )
              (assert true )
              (assert (= v852 v851 ) )
              (declare-fun map0_2 () (Array Address T4 ) )
              (assert (= map0_2 (store map0_1 v843 (T4_Some v844 ) ) ) )
              (declare-fun v1238 () Address )
              (assert true )
              (assert (= v1238 v497 ) )
              (declare-fun v1239 () Address )
              (assert true )
              (assert (= v1239 v498 ) )
              (declare-fun v1240 () UInt )
              (assert (<= 0 v1240 ) )
              (assert (= v1240 v610 ) )
              (declare-fun v1241 () UInt )
              (assert (<= 0 v1241 ) )
              (assert (= v1241 v499 ) )
              (declare-fun v1242 () UInt )
              (assert (<= 0 v1242 ) )
              (assert (= v1242 v499 ) )
              (declare-fun v1243 () UInt )
              (assert (<= 0 v1243 ) )
              (assert (= v1243 v611 ) )
              (declare-fun v1244 () UInt )
              (assert (<= 0 v1244 ) )
              (assert (= v1244 v502 ) )
              (declare-fun v1245 () UInt )
              (assert (<= 0 v1245 ) )
              (assert (= v1245 v527 ) )
              (declare-fun v1246 () UInt )
              (assert (<= 0 v1246 ) )
              (assert (= v1246 v505 ) )
              (declare-fun v1247 () Bool )
              (assert true )
              (assert (= v1247 (= v1246 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1247 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v876 () T2 )
              (assert (and true true (<= 0 (T2_elem2 v876 ) ) ) )
              (assert (= v609 (T5_transferFrom0_113 v876 ) ) )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net1209 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net1209 ) )
              (declare-fun v947 () Address )
              (assert true )
              (assert (= v947 (T2_elem0 v876 ) ) )
              (declare-fun v948 () Address )
              (assert true )
              (assert (= v948 (T2_elem1 v876 ) ) )
              (declare-fun v949 () UInt )
              (assert (<= 0 v949 ) )
              (assert (= v949 (T2_elem2 v876 ) ) )
              (declare-fun v950 () Bool )
              (assert true )
              (assert (= v950 (= v947 v498 ) ) )
              (declare-fun v951 () Bool )
              (assert true )
              (assert (= v951 (= v947 v497 ) ) )
              (declare-fun v952 () Bool )
              (assert true )
              (assert (= v952 (ite v950 true v951 ) ) )
              (declare-fun v953 () T4 )
              (assert (T4_inv v953 ) )
              (assert (= v953 (select map0_1 v947 ) ) )
              (declare-fun v954 () Bool )
              (assert true )
              (assert (= v954 (match v953 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v955 () Bool )
              (assert true )
              (assert (= v955 (ite v952 true v954 ) ) )
              (push 1 ) ;; {
                (assert (not v955 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v955 )
              (declare-fun v956 () Bool )
              (assert true )
              (assert (= v956 (= v949 0 ) ) )
              (push 1 ) ;; {
                (assert (not v956 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v956 )
              (declare-fun v957 () Bool )
              (assert true )
              (assert (= v957 true ) )
              (declare-fun v958 () Bool )
              (assert true )
              (assert (= v958 v957 ) )
              (declare-fun v1248 () Address )
              (assert true )
              (assert (= v1248 v948 ) )
              (declare-fun v1249 () Address )
              (assert true )
              (assert (= v1249 v948 ) )
              (declare-fun v1250 () UInt )
              (assert (<= 0 v1250 ) )
              (assert (= v1250 v610 ) )
              (declare-fun v1251 () UInt )
              (assert (<= 0 v1251 ) )
              (assert (= v1251 v499 ) )
              (declare-fun v1252 () UInt )
              (assert (<= 0 v1252 ) )
              (assert (= v1252 v499 ) )
              (declare-fun v1253 () UInt )
              (assert (<= 0 v1253 ) )
              (assert (= v1253 v611 ) )
              (declare-fun v1254 () UInt )
              (assert (<= 0 v1254 ) )
              (assert (= v1254 v502 ) )
              (declare-fun v1255 () UInt )
              (assert (<= 0 v1255 ) )
              (assert (= v1255 v527 ) )
              (declare-fun v1256 () UInt )
              (assert (<= 0 v1256 ) )
              (assert (= v1256 v505 ) )
              (declare-fun v1257 () Bool )
              (assert true )
              (assert (= v1257 (= v1256 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1257 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (pop 1 ) ;; }
        (push 1 ) ;; {
          (declare-fun map0_1 () (Array Address T4 ) )
          (declare-fun v497 () Address )
          (assert true )
          (declare-fun v498 () Address )
          (assert true )
          (declare-fun v499 () UInt )
          (assert (<= 0 v499 ) )
          (assert (<= v499 dlc_UInt_max ) )
          (declare-fun v500 () UInt )
          (assert (<= 0 v500 ) )
          (assert (<= v500 dlc_UInt_max ) )
          (declare-fun v501 () UInt )
          (assert (<= 0 v501 ) )
          (assert (<= v501 dlc_UInt_max ) )
          (declare-fun v502 () UInt )
          (assert (<= 0 v502 ) )
          (assert (<= v502 dlc_UInt_max ) )
          (declare-fun v503 () UInt )
          (assert (<= 0 v503 ) )
          (assert (<= v503 dlc_UInt_max ) )
          (declare-fun v504 () UInt )
          (assert (<= 0 v504 ) )
          (assert (<= v504 dlc_UInt_max ) )
          (declare-fun v505 () UInt )
          (assert (<= 0 v505 ) )
          (assert (<= v505 dlc_UInt_max ) )
          (declare-fun v507 () Bool )
          (assert true )
          (assert (= v507 (= v505 0 ) ) )
          (assert v507 )
          (assert (not true ) )
          (push 1 ) ;; {
            (declare-fun v1259 () Address )
            (assert true )
            (declare-fun v1260 () Address )
            (assert true )
            (declare-fun v1261 () Address )
            (assert true )
            (declare-fun v1262 () Address )
            (assert true )
            (declare-fun v1263 () Address )
            (assert true )
            (declare-fun v971 () UInt )
            (assert (<= 0 v971 ) )
            (declare-fun v972 () Bool )
            (assert true )
            (assert (= v972 (= v971 0 ) ) )
            (assert v972 )
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v1264 () Address )
            (assert true )
            (declare-fun v1265 () Address )
            (assert true )
            (declare-fun v1266 () Address )
            (assert true )
            (declare-fun v1267 () Address )
            (assert true )
            (declare-fun v1268 () Address )
            (assert true )
            (declare-fun v973 () Address )
            (assert true )
            (declare-fun v974 () Bool )
            (assert true )
            (assert (= v974 (= v973 v498 ) ) )
            (declare-fun v975 () UInt )
            (assert (<= 0 v975 ) )
            (assert (= v975 (ite v974 1 0 ) ) )
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v1269 () Address )
            (assert true )
            (declare-fun v1270 () Address )
            (assert true )
            (declare-fun v1271 () Address )
            (assert true )
            (declare-fun v1272 () Address )
            (assert true )
            (declare-fun v1273 () Address )
            (assert true )
            (declare-fun v976 () UInt )
            (assert (<= 0 v976 ) )
            (declare-fun v977 () Bool )
            (assert true )
            (assert (= v977 (= v976 0 ) ) )
            (assert v977 )
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v1274 () Address )
            (assert true )
            (declare-fun v1275 () Address )
            (assert true )
            (declare-fun v1276 () Address )
            (assert true )
            (declare-fun v1277 () Address )
            (assert true )
            (declare-fun v1278 () Address )
            (assert true )
            (declare-fun v978 () Address )
            (assert true )
            (declare-fun v979 () Address )
            (assert true )
            (declare-fun v980 () Bool )
            (assert true )
            (assert (= v980 (= v498 v978 ) ) )
            (declare-fun v981 () T4 )
            (assert (T4_inv v981 ) )
            (assert (= v981 (select map0_1 v979 ) ) )
            (declare-fun v982 () Bool )
            (assert true )
            (assert (= v982 (match v981 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
            (declare-fun v983 () Bool )
            (assert true )
            (assert (= v983 (ite v980 v982 false ) ) )
            (pop 1 ) ;; }
          (declare-fun v985 () Bool )
          (assert true )
          (assert (= v985 (= 0 v505 ) ) )
          (push 1 ) ;; {
            (assert (not v985 ) )
            (check-sat-using (try-for default 10 ) )
            ;; unsat
            (pop 1 ) ;; }
          (assert v985 )
          (pop 1 ) ;; }
        (pop 1 ) ;; }
      (pop 1 ) ;; }
    (pop 1 ) ;; }
  (push 1 ) ;; {
    (declare-fun v1279 () Address )
    (assert true )
    (declare-fun v1280 () Address )
    (assert true )
    (declare-fun v1281 () Address )
    (assert true )
    (declare-fun v1282 () Address )
    (assert true )
    (declare-fun v1283 () Address )
    (assert true )
    (push 1 ) ;; {
      (pop 1 ) ;; }
    (push 1 ) ;; {
      (declare-fun v484 () Address )
      (assert true )
      (declare-fun v485 () Bytes )
      (assert true )
      (declare-fun v486 () Bytes )
      (assert true )
      (declare-fun v487 () Bytes )
      (assert true )
      (declare-fun pv_net1284 () UInt )
      (assert (<= 0 pv_net1284 ) )
      (declare-fun pv_tok1286 () Token )
      (assert true )
      (declare-fun pv_ks1285 () (Array Token UInt ) )
      (assert (<= 0 (select pv_ks1285 pv_tok1286 ) ) )
      (declare-fun v1287 () Address )
      (assert true )
      (declare-fun v1288 () Address )
      (assert true )
      (declare-fun v1289 () Address )
      (assert true )
      (declare-fun v1290 () Address )
      (assert true )
      (declare-fun v1291 () Address )
      (assert true )
      (declare-fun v488 () UInt )
      (assert (<= 0 v488 ) )
      (declare-fun v489 () UInt )
      (assert (<= 0 v489 ) )
      (declare-fun v33 () Bool )
      (assert true )
      (assert (= v488 0 ) )
      (assert (= v489 0 ) )
      (assert (= 0 pv_net1284 ) )
      (push 1 ) ;; {
        (pop 1 ) ;; }
      (push 1 ) ;; {
        (declare-fun v491 () Address )
        (assert true )
        (declare-fun pv_net1292 () UInt )
        (assert (<= 0 pv_net1292 ) )
        (declare-fun pv_tok1294 () Token )
        (assert true )
        (declare-fun pv_ks1293 () (Array Token UInt ) )
        (assert (<= 0 (select pv_ks1293 pv_tok1294 ) ) )
        (declare-fun v1295 () Address )
        (assert true )
        (declare-fun v1296 () Address )
        (assert true )
        (declare-fun v1297 () Address )
        (assert true )
        (declare-fun v1298 () Address )
        (assert true )
        (declare-fun v1299 () Address )
        (assert true )
        (declare-fun v492 () UInt )
        (assert (<= 0 v492 ) )
        (declare-fun v493 () UInt )
        (assert (<= 0 v493 ) )
        (declare-fun v39 () Bool )
        (assert true )
        (assert (= v492 (+ v488 1 ) ) )
        (assert (= v493 (+ v489 1 ) ) )
        (assert (= 0 pv_net1292 ) )
        (declare-fun v495 () Bool )
        (assert true )
        (assert (= v495 (= v484 v491 ) ) )
        (assert v495 )
        (push 1 ) ;; {
          (declare-fun v1300 () Address )
          (assert true )
          (declare-fun v1301 () Address )
          (assert true )
          (declare-fun v1302 () Address )
          (assert true )
          (declare-fun v1303 () Address )
          (assert true )
          (declare-fun v1304 () Address )
          (assert true )
          (pop 1 ) ;; }
        (push 1 ) ;; {
          (declare-fun v1305 () Address )
          (assert true )
          (declare-fun v1306 () Address )
          (assert true )
          (declare-fun v1307 () Address )
          (assert true )
          (declare-fun v1308 () Address )
          (assert true )
          (declare-fun v1309 () Address )
          (assert true )
          (pop 1 ) ;; }
        (push 1 ) ;; {
          (declare-fun v1310 () Address )
          (assert true )
          (declare-fun v1311 () Address )
          (assert true )
          (declare-fun v1312 () Address )
          (assert true )
          (declare-fun v1313 () Address )
          (assert true )
          (declare-fun v1314 () Address )
          (assert true )
          (declare-fun v496 () UInt )
          (assert (<= 0 v496 ) )
          (pop 1 ) ;; }
        (push 1 ) ;; {
          (declare-fun v497 () Address )
          (assert true )
          (assert (= v497 v484 ) )
          (declare-fun v498 () Address )
          (assert true )
          (assert (= v498 v484 ) )
          (declare-fun v499 () UInt )
          (assert (<= 0 v499 ) )
          (assert (= v499 v492 ) )
          (declare-fun v500 () UInt )
          (assert (<= 0 v500 ) )
          (assert (= v500 v488 ) )
          (declare-fun v501 () UInt )
          (assert (<= 0 v501 ) )
          (assert (= v501 v488 ) )
          (declare-fun v502 () UInt )
          (assert (<= 0 v502 ) )
          (assert (= v502 v493 ) )
          (declare-fun v503 () UInt )
          (assert (<= 0 v503 ) )
          (assert (= v503 v489 ) )
          (declare-fun v504 () UInt )
          (assert (<= 0 v504 ) )
          (assert (= v504 v489 ) )
          (declare-fun v505 () UInt )
          (assert (<= 0 v505 ) )
          (assert (= v505 0 ) )
          (declare-fun v507 () Bool )
          (assert true )
          (assert (= v507 (= v505 0 ) ) )
          (push 1 ) ;; {
            (assert (not v507 ) )
            (check-sat-using (try-for default 10 ) )
            ;; unsat
            (pop 1 ) ;; }
          (pop 1 ) ;; }
        (push 1 ) ;; {
          (declare-fun map0_1 () (Array Address T4 ) )
          (declare-fun v497 () Address )
          (assert true )
          (declare-fun v498 () Address )
          (assert true )
          (declare-fun v499 () UInt )
          (assert (<= 0 v499 ) )
          (assert (<= v499 dlc_UInt_max ) )
          (declare-fun v500 () UInt )
          (assert (<= 0 v500 ) )
          (assert (<= v500 dlc_UInt_max ) )
          (declare-fun v501 () UInt )
          (assert (<= 0 v501 ) )
          (assert (<= v501 dlc_UInt_max ) )
          (declare-fun v502 () UInt )
          (assert (<= 0 v502 ) )
          (assert (<= v502 dlc_UInt_max ) )
          (declare-fun v503 () UInt )
          (assert (<= 0 v503 ) )
          (assert (<= v503 dlc_UInt_max ) )
          (declare-fun v504 () UInt )
          (assert (<= 0 v504 ) )
          (assert (<= v504 dlc_UInt_max ) )
          (declare-fun v505 () UInt )
          (assert (<= 0 v505 ) )
          (assert (<= v505 dlc_UInt_max ) )
          (declare-fun v507 () Bool )
          (assert true )
          (assert (= v507 (= v505 0 ) ) )
          (assert v507 )
          (assert true )
          (push 1 ) ;; {
            (declare-fun v1316 () Address )
            (assert true )
            (declare-fun v1317 () Address )
            (assert true )
            (declare-fun v1318 () Address )
            (assert true )
            (declare-fun v1319 () Address )
            (assert true )
            (declare-fun v1320 () Address )
            (assert true )
            (declare-fun v508 () UInt )
            (assert (<= 0 v508 ) )
            (declare-fun v509 () Bool )
            (assert true )
            (assert (= v509 (= v508 0 ) ) )
            (assert v509 )
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v1321 () Address )
            (assert true )
            (declare-fun v1322 () Address )
            (assert true )
            (declare-fun v1323 () Address )
            (assert true )
            (declare-fun v1324 () Address )
            (assert true )
            (declare-fun v1325 () Address )
            (assert true )
            (declare-fun v510 () Address )
            (assert true )
            (declare-fun v511 () Bool )
            (assert true )
            (assert (= v511 (= v510 v498 ) ) )
            (declare-fun v512 () UInt )
            (assert (<= 0 v512 ) )
            (assert (= v512 (ite v511 1 0 ) ) )
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v1326 () Address )
            (assert true )
            (declare-fun v1327 () Address )
            (assert true )
            (declare-fun v1328 () Address )
            (assert true )
            (declare-fun v1329 () Address )
            (assert true )
            (declare-fun v1330 () Address )
            (assert true )
            (declare-fun v513 () UInt )
            (assert (<= 0 v513 ) )
            (declare-fun v514 () Bool )
            (assert true )
            (assert (= v514 (= v513 0 ) ) )
            (assert v514 )
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v1331 () Address )
            (assert true )
            (declare-fun v1332 () Address )
            (assert true )
            (declare-fun v1333 () Address )
            (assert true )
            (declare-fun v1334 () Address )
            (assert true )
            (declare-fun v1335 () Address )
            (assert true )
            (declare-fun v515 () Address )
            (assert true )
            (declare-fun v516 () Address )
            (assert true )
            (declare-fun v517 () Bool )
            (assert true )
            (assert (= v517 (= v498 v515 ) ) )
            (declare-fun v518 () T4 )
            (assert (T4_inv v518 ) )
            (assert (= v518 (select map0_1 v516 ) ) )
            (declare-fun v519 () Bool )
            (assert true )
            (assert (= v519 (match v518 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
            (declare-fun v520 () Bool )
            (assert true )
            (assert (= v520 (ite v517 v519 false ) ) )
            (pop 1 ) ;; }
          (declare-fun v527 () UInt )
          (assert (<= 0 v527 ) )
          (assert (= v527 (+ v502 5 ) ) )
          (push 1 ) ;; {
            (push 1 ) ;; {
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v964 () Address )
              (assert true )
              (declare-fun pv_net1336 () UInt )
              (assert (<= 0 pv_net1336 ) )
              (declare-fun pv_tok1338 () Token )
              (assert true )
              (declare-fun pv_ks1337 () (Array Token UInt ) )
              (assert (<= 0 (select pv_ks1337 pv_tok1338 ) ) )
              (declare-fun v1339 () Address )
              (assert true )
              (declare-fun v1340 () Address )
              (assert true )
              (declare-fun v1341 () Address )
              (assert true )
              (declare-fun v1342 () Address )
              (assert true )
              (declare-fun v1343 () Address )
              (assert true )
              (declare-fun v965 () UInt )
              (assert (<= 0 v965 ) )
              (declare-fun v966 () UInt )
              (assert (<= 0 v966 ) )
              (declare-fun v445 () Bool )
              (assert true )
              (assert (= v965 (+ v499 1 ) ) )
              (assert (= v966 (+ v502 1 ) ) )
              (assert (= 0 pv_net1336 ) )
              (declare-fun v968 () Bool )
              (assert true )
              (assert (= v968 (= v484 v964 ) ) )
              (assert v968 )
              (declare-fun v1344 () Address )
              (assert true )
              (assert (= v1344 v497 ) )
              (declare-fun v1345 () Address )
              (assert true )
              (assert (= v1345 v498 ) )
              (declare-fun v1346 () UInt )
              (assert (<= 0 v1346 ) )
              (assert (= v1346 v965 ) )
              (declare-fun v1347 () UInt )
              (assert (<= 0 v1347 ) )
              (assert (= v1347 v499 ) )
              (declare-fun v1348 () UInt )
              (assert (<= 0 v1348 ) )
              (assert (= v1348 v499 ) )
              (declare-fun v1349 () UInt )
              (assert (<= 0 v1349 ) )
              (assert (= v1349 v966 ) )
              (declare-fun v1350 () UInt )
              (assert (<= 0 v1350 ) )
              (assert (= v1350 v502 ) )
              (declare-fun v1351 () UInt )
              (assert (<= 0 v1351 ) )
              (assert (= v1351 v527 ) )
              (declare-fun v1352 () UInt )
              (assert (<= 0 v1352 ) )
              (assert (= v1352 v505 ) )
              (declare-fun v1353 () Bool )
              (assert true )
              (assert (= v1353 (= v1352 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1353 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v608 () Address )
            (assert true )
            (declare-fun v609 () T5 )
            (assert (T5_inv v609 ) )
            (declare-fun pv_net1354 () UInt )
            (assert (<= 0 pv_net1354 ) )
            (declare-fun pv_tok1356 () Token )
            (assert true )
            (declare-fun pv_ks1355 () (Array Token UInt ) )
            (assert (<= 0 (select pv_ks1355 pv_tok1356 ) ) )
            (declare-fun v1357 () Address )
            (assert true )
            (declare-fun v1358 () Address )
            (assert true )
            (declare-fun v1359 () Address )
            (assert true )
            (declare-fun v1360 () Address )
            (assert true )
            (declare-fun v1361 () Address )
            (assert true )
            (declare-fun v610 () UInt )
            (assert (<= 0 v610 ) )
            (declare-fun v611 () UInt )
            (assert (<= 0 v611 ) )
            (declare-fun v338 () Bool )
            (assert true )
            (assert (= v610 (+ v499 1 ) ) )
            (assert (= v611 (+ v502 1 ) ) )
            (push 1 ) ;; {
              (declare-fun v612 () T1 )
              (assert (and true (<= 0 (T1_elem1 v612 ) ) ) )
              (assert (= v609 (T5_approve0_113 v612 ) ) )
              (assert (= 0 pv_net1354 ) )
              (declare-fun v632 () Address )
              (assert true )
              (assert (= v632 (T1_elem0 v612 ) ) )
              (declare-fun v633 () UInt )
              (assert (<= 0 v633 ) )
              (assert (= v633 (T1_elem1 v612 ) ) )
              (declare-fun v634 () Bool )
              (assert true )
              (assert (= v634 (= v608 v498 ) ) )
              (declare-fun v635 () Bool )
              (assert true )
              (assert (= v635 (= v608 v497 ) ) )
              (declare-fun v636 () Bool )
              (assert true )
              (assert (= v636 (ite v634 true v635 ) ) )
              (declare-fun v637 () T4 )
              (assert (T4_inv v637 ) )
              (assert (= v637 (select map0_1 v608 ) ) )
              (declare-fun v638 () Bool )
              (assert true )
              (assert (= v638 (match v637 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v639 () Bool )
              (assert true )
              (assert (= v639 (ite v636 true v638 ) ) )
              (assert v639 )
              (declare-fun v640 () Bool )
              (assert true )
              (assert (= v640 (= v633 0 ) ) )
              (assert v640 )
              (declare-fun v641 () Bool )
              (assert true )
              (assert (= v641 true ) )
              (declare-fun v642 () Bool )
              (assert true )
              (assert (= v642 v641 ) )
              (declare-fun v1362 () Address )
              (assert true )
              (assert (= v1362 v632 ) )
              (declare-fun v1363 () Address )
              (assert true )
              (assert (= v1363 v498 ) )
              (declare-fun v1364 () UInt )
              (assert (<= 0 v1364 ) )
              (assert (= v1364 v610 ) )
              (declare-fun v1365 () UInt )
              (assert (<= 0 v1365 ) )
              (assert (= v1365 v499 ) )
              (declare-fun v1366 () UInt )
              (assert (<= 0 v1366 ) )
              (assert (= v1366 v499 ) )
              (declare-fun v1367 () UInt )
              (assert (<= 0 v1367 ) )
              (assert (= v1367 v611 ) )
              (declare-fun v1368 () UInt )
              (assert (<= 0 v1368 ) )
              (assert (= v1368 v502 ) )
              (declare-fun v1369 () UInt )
              (assert (<= 0 v1369 ) )
              (assert (= v1369 v527 ) )
              (declare-fun v1370 () UInt )
              (assert (<= 0 v1370 ) )
              (assert (= v1370 v505 ) )
              (declare-fun v1371 () Bool )
              (assert true )
              (assert (= v1371 (= v1370 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1371 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v700 () T2 )
              (assert (and true true (<= 0 (T2_elem2 v700 ) ) ) )
              (assert (= v609 (T5_safeTransferFrom0_113 v700 ) ) )
              (assert (= 0 pv_net1354 ) )
              (declare-fun v737 () Address )
              (assert true )
              (assert (= v737 (T2_elem0 v700 ) ) )
              (declare-fun v738 () Address )
              (assert true )
              (assert (= v738 (T2_elem1 v700 ) ) )
              (declare-fun v739 () UInt )
              (assert (<= 0 v739 ) )
              (assert (= v739 (T2_elem2 v700 ) ) )
              (declare-fun v740 () Bool )
              (assert true )
              (assert (= v740 (= v737 v498 ) ) )
              (declare-fun v741 () Bool )
              (assert true )
              (assert (= v741 (= v737 v497 ) ) )
              (declare-fun v742 () Bool )
              (assert true )
              (assert (= v742 (ite v740 true v741 ) ) )
              (declare-fun v743 () T4 )
              (assert (T4_inv v743 ) )
              (assert (= v743 (select map0_1 v737 ) ) )
              (declare-fun v744 () Bool )
              (assert true )
              (assert (= v744 (match v743 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v745 () Bool )
              (assert true )
              (assert (= v745 (ite v742 true v744 ) ) )
              (assert v745 )
              (declare-fun v746 () Bool )
              (assert true )
              (assert (= v746 (= v739 0 ) ) )
              (assert v746 )
              (declare-fun v747 () Bool )
              (assert true )
              (assert (= v747 true ) )
              (declare-fun v748 () Bool )
              (assert true )
              (assert (= v748 v747 ) )
              (declare-fun v1372 () Address )
              (assert true )
              (assert (= v1372 v738 ) )
              (declare-fun v1373 () Address )
              (assert true )
              (assert (= v1373 v738 ) )
              (declare-fun v1374 () UInt )
              (assert (<= 0 v1374 ) )
              (assert (= v1374 v610 ) )
              (declare-fun v1375 () UInt )
              (assert (<= 0 v1375 ) )
              (assert (= v1375 v499 ) )
              (declare-fun v1376 () UInt )
              (assert (<= 0 v1376 ) )
              (assert (= v1376 v499 ) )
              (declare-fun v1377 () UInt )
              (assert (<= 0 v1377 ) )
              (assert (= v1377 v611 ) )
              (declare-fun v1378 () UInt )
              (assert (<= 0 v1378 ) )
              (assert (= v1378 v502 ) )
              (declare-fun v1379 () UInt )
              (assert (<= 0 v1379 ) )
              (assert (= v1379 v527 ) )
              (declare-fun v1380 () UInt )
              (assert (<= 0 v1380 ) )
              (assert (= v1380 v505 ) )
              (declare-fun v1381 () Bool )
              (assert true )
              (assert (= v1381 (= v1380 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1381 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v788 () T0 )
              (assert (and true true ) )
              (assert (= v609 (T5_setApprovalForAll0_113 v788 ) ) )
              (assert (= 0 pv_net1354 ) )
              (declare-fun v843 () Address )
              (assert true )
              (assert (= v843 (T0_elem0 v788 ) ) )
              (declare-fun v844 () Bool )
              (assert true )
              (assert (= v844 (T0_elem1 v788 ) ) )
              (declare-fun v845 () Bool )
              (assert true )
              (assert (= v845 (= v608 v498 ) ) )
              (declare-fun v846 () Bool )
              (assert true )
              (assert (= v846 (= v608 v497 ) ) )
              (declare-fun v847 () Bool )
              (assert true )
              (assert (= v847 (ite v845 true v846 ) ) )
              (declare-fun v848 () T4 )
              (assert (T4_inv v848 ) )
              (assert (= v848 (select map0_1 v608 ) ) )
              (declare-fun v849 () Bool )
              (assert true )
              (assert (= v849 (match v848 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v850 () Bool )
              (assert true )
              (assert (= v850 (ite v847 true v849 ) ) )
              (assert v850 )
              (declare-fun v851 () Bool )
              (assert true )
              (assert (= v851 true ) )
              (declare-fun v852 () Bool )
              (assert true )
              (assert (= v852 v851 ) )
              (declare-fun map0_2 () (Array Address T4 ) )
              (assert (= map0_2 (store map0_1 v843 (T4_Some v844 ) ) ) )
              (declare-fun v1383 () Address )
              (assert true )
              (assert (= v1383 v497 ) )
              (declare-fun v1384 () Address )
              (assert true )
              (assert (= v1384 v498 ) )
              (declare-fun v1385 () UInt )
              (assert (<= 0 v1385 ) )
              (assert (= v1385 v610 ) )
              (declare-fun v1386 () UInt )
              (assert (<= 0 v1386 ) )
              (assert (= v1386 v499 ) )
              (declare-fun v1387 () UInt )
              (assert (<= 0 v1387 ) )
              (assert (= v1387 v499 ) )
              (declare-fun v1388 () UInt )
              (assert (<= 0 v1388 ) )
              (assert (= v1388 v611 ) )
              (declare-fun v1389 () UInt )
              (assert (<= 0 v1389 ) )
              (assert (= v1389 v502 ) )
              (declare-fun v1390 () UInt )
              (assert (<= 0 v1390 ) )
              (assert (= v1390 v527 ) )
              (declare-fun v1391 () UInt )
              (assert (<= 0 v1391 ) )
              (assert (= v1391 v505 ) )
              (declare-fun v1392 () Bool )
              (assert true )
              (assert (= v1392 (= v1391 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1392 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v876 () T2 )
              (assert (and true true (<= 0 (T2_elem2 v876 ) ) ) )
              (assert (= v609 (T5_transferFrom0_113 v876 ) ) )
              (assert (= 0 pv_net1354 ) )
              (declare-fun v947 () Address )
              (assert true )
              (assert (= v947 (T2_elem0 v876 ) ) )
              (declare-fun v948 () Address )
              (assert true )
              (assert (= v948 (T2_elem1 v876 ) ) )
              (declare-fun v949 () UInt )
              (assert (<= 0 v949 ) )
              (assert (= v949 (T2_elem2 v876 ) ) )
              (declare-fun v950 () Bool )
              (assert true )
              (assert (= v950 (= v947 v498 ) ) )
              (declare-fun v951 () Bool )
              (assert true )
              (assert (= v951 (= v947 v497 ) ) )
              (declare-fun v952 () Bool )
              (assert true )
              (assert (= v952 (ite v950 true v951 ) ) )
              (declare-fun v953 () T4 )
              (assert (T4_inv v953 ) )
              (assert (= v953 (select map0_1 v947 ) ) )
              (declare-fun v954 () Bool )
              (assert true )
              (assert (= v954 (match v953 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v955 () Bool )
              (assert true )
              (assert (= v955 (ite v952 true v954 ) ) )
              (assert v955 )
              (declare-fun v956 () Bool )
              (assert true )
              (assert (= v956 (= v949 0 ) ) )
              (assert v956 )
              (declare-fun v957 () Bool )
              (assert true )
              (assert (= v957 true ) )
              (declare-fun v958 () Bool )
              (assert true )
              (assert (= v958 v957 ) )
              (declare-fun v1393 () Address )
              (assert true )
              (assert (= v1393 v948 ) )
              (declare-fun v1394 () Address )
              (assert true )
              (assert (= v1394 v948 ) )
              (declare-fun v1395 () UInt )
              (assert (<= 0 v1395 ) )
              (assert (= v1395 v610 ) )
              (declare-fun v1396 () UInt )
              (assert (<= 0 v1396 ) )
              (assert (= v1396 v499 ) )
              (declare-fun v1397 () UInt )
              (assert (<= 0 v1397 ) )
              (assert (= v1397 v499 ) )
              (declare-fun v1398 () UInt )
              (assert (<= 0 v1398 ) )
              (assert (= v1398 v611 ) )
              (declare-fun v1399 () UInt )
              (assert (<= 0 v1399 ) )
              (assert (= v1399 v502 ) )
              (declare-fun v1400 () UInt )
              (assert (<= 0 v1400 ) )
              (assert (= v1400 v527 ) )
              (declare-fun v1401 () UInt )
              (assert (<= 0 v1401 ) )
              (assert (= v1401 v505 ) )
              (declare-fun v1402 () Bool )
              (assert true )
              (assert (= v1402 (= v1401 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1402 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v608 () Address )
            (assert true )
            (declare-fun v609 () T5 )
            (assert (T5_inv v609 ) )
            (declare-fun pv_net1403 () UInt )
            (assert (<= 0 pv_net1403 ) )
            (declare-fun pv_tok1405 () Token )
            (assert true )
            (declare-fun pv_ks1404 () (Array Token UInt ) )
            (assert (<= 0 (select pv_ks1404 pv_tok1405 ) ) )
            (declare-fun v1406 () Address )
            (assert true )
            (declare-fun v1407 () Address )
            (assert true )
            (declare-fun v1408 () Address )
            (assert true )
            (declare-fun v1409 () Address )
            (assert true )
            (declare-fun v1410 () Address )
            (assert true )
            (declare-fun v610 () UInt )
            (assert (<= 0 v610 ) )
            (declare-fun v611 () UInt )
            (assert (<= 0 v611 ) )
            (declare-fun v338 () Bool )
            (assert true )
            (assert (= v610 (+ v499 1 ) ) )
            (assert (= v611 (+ v502 1 ) ) )
            (push 1 ) ;; {
              (declare-fun v612 () T1 )
              (assert (and true (<= 0 (T1_elem1 v612 ) ) ) )
              (assert (= v609 (T5_approve0_113 v612 ) ) )
              (assert (= 0 pv_net1403 ) )
              (declare-fun v632 () Address )
              (assert true )
              (assert (= v632 (T1_elem0 v612 ) ) )
              (declare-fun v633 () UInt )
              (assert (<= 0 v633 ) )
              (assert (= v633 (T1_elem1 v612 ) ) )
              (declare-fun v634 () Bool )
              (assert true )
              (assert (= v634 (= v608 v498 ) ) )
              (declare-fun v635 () Bool )
              (assert true )
              (assert (= v635 (= v608 v497 ) ) )
              (declare-fun v636 () Bool )
              (assert true )
              (assert (= v636 (ite v634 true v635 ) ) )
              (declare-fun v637 () T4 )
              (assert (T4_inv v637 ) )
              (assert (= v637 (select map0_1 v608 ) ) )
              (declare-fun v638 () Bool )
              (assert true )
              (assert (= v638 (match v637 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v639 () Bool )
              (assert true )
              (assert (= v639 (ite v636 true v638 ) ) )
              (assert v639 )
              (declare-fun v640 () Bool )
              (assert true )
              (assert (= v640 (= v633 0 ) ) )
              (assert v640 )
              (declare-fun v641 () Bool )
              (assert true )
              (assert (= v641 true ) )
              (declare-fun v642 () Bool )
              (assert true )
              (assert (= v642 v641 ) )
              (declare-fun v1411 () Address )
              (assert true )
              (assert (= v1411 v632 ) )
              (declare-fun v1412 () Address )
              (assert true )
              (assert (= v1412 v498 ) )
              (declare-fun v1413 () UInt )
              (assert (<= 0 v1413 ) )
              (assert (= v1413 v610 ) )
              (declare-fun v1414 () UInt )
              (assert (<= 0 v1414 ) )
              (assert (= v1414 v499 ) )
              (declare-fun v1415 () UInt )
              (assert (<= 0 v1415 ) )
              (assert (= v1415 v499 ) )
              (declare-fun v1416 () UInt )
              (assert (<= 0 v1416 ) )
              (assert (= v1416 v611 ) )
              (declare-fun v1417 () UInt )
              (assert (<= 0 v1417 ) )
              (assert (= v1417 v502 ) )
              (declare-fun v1418 () UInt )
              (assert (<= 0 v1418 ) )
              (assert (= v1418 v527 ) )
              (declare-fun v1419 () UInt )
              (assert (<= 0 v1419 ) )
              (assert (= v1419 v505 ) )
              (declare-fun v1420 () Bool )
              (assert true )
              (assert (= v1420 (= v1419 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1420 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v700 () T2 )
              (assert (and true true (<= 0 (T2_elem2 v700 ) ) ) )
              (assert (= v609 (T5_safeTransferFrom0_113 v700 ) ) )
              (assert (= 0 pv_net1403 ) )
              (declare-fun v737 () Address )
              (assert true )
              (assert (= v737 (T2_elem0 v700 ) ) )
              (declare-fun v738 () Address )
              (assert true )
              (assert (= v738 (T2_elem1 v700 ) ) )
              (declare-fun v739 () UInt )
              (assert (<= 0 v739 ) )
              (assert (= v739 (T2_elem2 v700 ) ) )
              (declare-fun v740 () Bool )
              (assert true )
              (assert (= v740 (= v737 v498 ) ) )
              (declare-fun v741 () Bool )
              (assert true )
              (assert (= v741 (= v737 v497 ) ) )
              (declare-fun v742 () Bool )
              (assert true )
              (assert (= v742 (ite v740 true v741 ) ) )
              (declare-fun v743 () T4 )
              (assert (T4_inv v743 ) )
              (assert (= v743 (select map0_1 v737 ) ) )
              (declare-fun v744 () Bool )
              (assert true )
              (assert (= v744 (match v743 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v745 () Bool )
              (assert true )
              (assert (= v745 (ite v742 true v744 ) ) )
              (assert v745 )
              (declare-fun v746 () Bool )
              (assert true )
              (assert (= v746 (= v739 0 ) ) )
              (assert v746 )
              (declare-fun v747 () Bool )
              (assert true )
              (assert (= v747 true ) )
              (declare-fun v748 () Bool )
              (assert true )
              (assert (= v748 v747 ) )
              (declare-fun v1421 () Address )
              (assert true )
              (assert (= v1421 v738 ) )
              (declare-fun v1422 () Address )
              (assert true )
              (assert (= v1422 v738 ) )
              (declare-fun v1423 () UInt )
              (assert (<= 0 v1423 ) )
              (assert (= v1423 v610 ) )
              (declare-fun v1424 () UInt )
              (assert (<= 0 v1424 ) )
              (assert (= v1424 v499 ) )
              (declare-fun v1425 () UInt )
              (assert (<= 0 v1425 ) )
              (assert (= v1425 v499 ) )
              (declare-fun v1426 () UInt )
              (assert (<= 0 v1426 ) )
              (assert (= v1426 v611 ) )
              (declare-fun v1427 () UInt )
              (assert (<= 0 v1427 ) )
              (assert (= v1427 v502 ) )
              (declare-fun v1428 () UInt )
              (assert (<= 0 v1428 ) )
              (assert (= v1428 v527 ) )
              (declare-fun v1429 () UInt )
              (assert (<= 0 v1429 ) )
              (assert (= v1429 v505 ) )
              (declare-fun v1430 () Bool )
              (assert true )
              (assert (= v1430 (= v1429 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1430 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v788 () T0 )
              (assert (and true true ) )
              (assert (= v609 (T5_setApprovalForAll0_113 v788 ) ) )
              (assert (= 0 pv_net1403 ) )
              (declare-fun v843 () Address )
              (assert true )
              (assert (= v843 (T0_elem0 v788 ) ) )
              (declare-fun v844 () Bool )
              (assert true )
              (assert (= v844 (T0_elem1 v788 ) ) )
              (declare-fun v845 () Bool )
              (assert true )
              (assert (= v845 (= v608 v498 ) ) )
              (declare-fun v846 () Bool )
              (assert true )
              (assert (= v846 (= v608 v497 ) ) )
              (declare-fun v847 () Bool )
              (assert true )
              (assert (= v847 (ite v845 true v846 ) ) )
              (declare-fun v848 () T4 )
              (assert (T4_inv v848 ) )
              (assert (= v848 (select map0_1 v608 ) ) )
              (declare-fun v849 () Bool )
              (assert true )
              (assert (= v849 (match v848 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v850 () Bool )
              (assert true )
              (assert (= v850 (ite v847 true v849 ) ) )
              (assert v850 )
              (declare-fun v851 () Bool )
              (assert true )
              (assert (= v851 true ) )
              (declare-fun v852 () Bool )
              (assert true )
              (assert (= v852 v851 ) )
              (declare-fun map0_2 () (Array Address T4 ) )
              (assert (= map0_2 (store map0_1 v843 (T4_Some v844 ) ) ) )
              (declare-fun v1432 () Address )
              (assert true )
              (assert (= v1432 v497 ) )
              (declare-fun v1433 () Address )
              (assert true )
              (assert (= v1433 v498 ) )
              (declare-fun v1434 () UInt )
              (assert (<= 0 v1434 ) )
              (assert (= v1434 v610 ) )
              (declare-fun v1435 () UInt )
              (assert (<= 0 v1435 ) )
              (assert (= v1435 v499 ) )
              (declare-fun v1436 () UInt )
              (assert (<= 0 v1436 ) )
              (assert (= v1436 v499 ) )
              (declare-fun v1437 () UInt )
              (assert (<= 0 v1437 ) )
              (assert (= v1437 v611 ) )
              (declare-fun v1438 () UInt )
              (assert (<= 0 v1438 ) )
              (assert (= v1438 v502 ) )
              (declare-fun v1439 () UInt )
              (assert (<= 0 v1439 ) )
              (assert (= v1439 v527 ) )
              (declare-fun v1440 () UInt )
              (assert (<= 0 v1440 ) )
              (assert (= v1440 v505 ) )
              (declare-fun v1441 () Bool )
              (assert true )
              (assert (= v1441 (= v1440 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1441 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v876 () T2 )
              (assert (and true true (<= 0 (T2_elem2 v876 ) ) ) )
              (assert (= v609 (T5_transferFrom0_113 v876 ) ) )
              (assert (= 0 pv_net1403 ) )
              (declare-fun v947 () Address )
              (assert true )
              (assert (= v947 (T2_elem0 v876 ) ) )
              (declare-fun v948 () Address )
              (assert true )
              (assert (= v948 (T2_elem1 v876 ) ) )
              (declare-fun v949 () UInt )
              (assert (<= 0 v949 ) )
              (assert (= v949 (T2_elem2 v876 ) ) )
              (declare-fun v950 () Bool )
              (assert true )
              (assert (= v950 (= v947 v498 ) ) )
              (declare-fun v951 () Bool )
              (assert true )
              (assert (= v951 (= v947 v497 ) ) )
              (declare-fun v952 () Bool )
              (assert true )
              (assert (= v952 (ite v950 true v951 ) ) )
              (declare-fun v953 () T4 )
              (assert (T4_inv v953 ) )
              (assert (= v953 (select map0_1 v947 ) ) )
              (declare-fun v954 () Bool )
              (assert true )
              (assert (= v954 (match v953 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v955 () Bool )
              (assert true )
              (assert (= v955 (ite v952 true v954 ) ) )
              (assert v955 )
              (declare-fun v956 () Bool )
              (assert true )
              (assert (= v956 (= v949 0 ) ) )
              (assert v956 )
              (declare-fun v957 () Bool )
              (assert true )
              (assert (= v957 true ) )
              (declare-fun v958 () Bool )
              (assert true )
              (assert (= v958 v957 ) )
              (declare-fun v1442 () Address )
              (assert true )
              (assert (= v1442 v948 ) )
              (declare-fun v1443 () Address )
              (assert true )
              (assert (= v1443 v948 ) )
              (declare-fun v1444 () UInt )
              (assert (<= 0 v1444 ) )
              (assert (= v1444 v610 ) )
              (declare-fun v1445 () UInt )
              (assert (<= 0 v1445 ) )
              (assert (= v1445 v499 ) )
              (declare-fun v1446 () UInt )
              (assert (<= 0 v1446 ) )
              (assert (= v1446 v499 ) )
              (declare-fun v1447 () UInt )
              (assert (<= 0 v1447 ) )
              (assert (= v1447 v611 ) )
              (declare-fun v1448 () UInt )
              (assert (<= 0 v1448 ) )
              (assert (= v1448 v502 ) )
              (declare-fun v1449 () UInt )
              (assert (<= 0 v1449 ) )
              (assert (= v1449 v527 ) )
              (declare-fun v1450 () UInt )
              (assert (<= 0 v1450 ) )
              (assert (= v1450 v505 ) )
              (declare-fun v1451 () Bool )
              (assert true )
              (assert (= v1451 (= v1450 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1451 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v608 () Address )
            (assert true )
            (declare-fun v609 () T5 )
            (assert (T5_inv v609 ) )
            (declare-fun pv_net1452 () UInt )
            (assert (<= 0 pv_net1452 ) )
            (declare-fun pv_tok1454 () Token )
            (assert true )
            (declare-fun pv_ks1453 () (Array Token UInt ) )
            (assert (<= 0 (select pv_ks1453 pv_tok1454 ) ) )
            (declare-fun v1455 () Address )
            (assert true )
            (declare-fun v1456 () Address )
            (assert true )
            (declare-fun v1457 () Address )
            (assert true )
            (declare-fun v1458 () Address )
            (assert true )
            (declare-fun v1459 () Address )
            (assert true )
            (declare-fun v610 () UInt )
            (assert (<= 0 v610 ) )
            (declare-fun v611 () UInt )
            (assert (<= 0 v611 ) )
            (declare-fun v338 () Bool )
            (assert true )
            (assert (= v610 (+ v499 1 ) ) )
            (assert (= v611 (+ v502 1 ) ) )
            (push 1 ) ;; {
              (declare-fun v612 () T1 )
              (assert (and true (<= 0 (T1_elem1 v612 ) ) ) )
              (assert (= v609 (T5_approve0_113 v612 ) ) )
              (assert (= 0 pv_net1452 ) )
              (declare-fun v632 () Address )
              (assert true )
              (assert (= v632 (T1_elem0 v612 ) ) )
              (declare-fun v633 () UInt )
              (assert (<= 0 v633 ) )
              (assert (= v633 (T1_elem1 v612 ) ) )
              (declare-fun v634 () Bool )
              (assert true )
              (assert (= v634 (= v608 v498 ) ) )
              (declare-fun v635 () Bool )
              (assert true )
              (assert (= v635 (= v608 v497 ) ) )
              (declare-fun v636 () Bool )
              (assert true )
              (assert (= v636 (ite v634 true v635 ) ) )
              (declare-fun v637 () T4 )
              (assert (T4_inv v637 ) )
              (assert (= v637 (select map0_1 v608 ) ) )
              (declare-fun v638 () Bool )
              (assert true )
              (assert (= v638 (match v637 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v639 () Bool )
              (assert true )
              (assert (= v639 (ite v636 true v638 ) ) )
              (assert v639 )
              (declare-fun v640 () Bool )
              (assert true )
              (assert (= v640 (= v633 0 ) ) )
              (assert v640 )
              (declare-fun v641 () Bool )
              (assert true )
              (assert (= v641 true ) )
              (declare-fun v642 () Bool )
              (assert true )
              (assert (= v642 v641 ) )
              (declare-fun v1460 () Address )
              (assert true )
              (assert (= v1460 v632 ) )
              (declare-fun v1461 () Address )
              (assert true )
              (assert (= v1461 v498 ) )
              (declare-fun v1462 () UInt )
              (assert (<= 0 v1462 ) )
              (assert (= v1462 v610 ) )
              (declare-fun v1463 () UInt )
              (assert (<= 0 v1463 ) )
              (assert (= v1463 v499 ) )
              (declare-fun v1464 () UInt )
              (assert (<= 0 v1464 ) )
              (assert (= v1464 v499 ) )
              (declare-fun v1465 () UInt )
              (assert (<= 0 v1465 ) )
              (assert (= v1465 v611 ) )
              (declare-fun v1466 () UInt )
              (assert (<= 0 v1466 ) )
              (assert (= v1466 v502 ) )
              (declare-fun v1467 () UInt )
              (assert (<= 0 v1467 ) )
              (assert (= v1467 v527 ) )
              (declare-fun v1468 () UInt )
              (assert (<= 0 v1468 ) )
              (assert (= v1468 v505 ) )
              (declare-fun v1469 () Bool )
              (assert true )
              (assert (= v1469 (= v1468 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1469 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v700 () T2 )
              (assert (and true true (<= 0 (T2_elem2 v700 ) ) ) )
              (assert (= v609 (T5_safeTransferFrom0_113 v700 ) ) )
              (assert (= 0 pv_net1452 ) )
              (declare-fun v737 () Address )
              (assert true )
              (assert (= v737 (T2_elem0 v700 ) ) )
              (declare-fun v738 () Address )
              (assert true )
              (assert (= v738 (T2_elem1 v700 ) ) )
              (declare-fun v739 () UInt )
              (assert (<= 0 v739 ) )
              (assert (= v739 (T2_elem2 v700 ) ) )
              (declare-fun v740 () Bool )
              (assert true )
              (assert (= v740 (= v737 v498 ) ) )
              (declare-fun v741 () Bool )
              (assert true )
              (assert (= v741 (= v737 v497 ) ) )
              (declare-fun v742 () Bool )
              (assert true )
              (assert (= v742 (ite v740 true v741 ) ) )
              (declare-fun v743 () T4 )
              (assert (T4_inv v743 ) )
              (assert (= v743 (select map0_1 v737 ) ) )
              (declare-fun v744 () Bool )
              (assert true )
              (assert (= v744 (match v743 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v745 () Bool )
              (assert true )
              (assert (= v745 (ite v742 true v744 ) ) )
              (assert v745 )
              (declare-fun v746 () Bool )
              (assert true )
              (assert (= v746 (= v739 0 ) ) )
              (assert v746 )
              (declare-fun v747 () Bool )
              (assert true )
              (assert (= v747 true ) )
              (declare-fun v748 () Bool )
              (assert true )
              (assert (= v748 v747 ) )
              (declare-fun v1470 () Address )
              (assert true )
              (assert (= v1470 v738 ) )
              (declare-fun v1471 () Address )
              (assert true )
              (assert (= v1471 v738 ) )
              (declare-fun v1472 () UInt )
              (assert (<= 0 v1472 ) )
              (assert (= v1472 v610 ) )
              (declare-fun v1473 () UInt )
              (assert (<= 0 v1473 ) )
              (assert (= v1473 v499 ) )
              (declare-fun v1474 () UInt )
              (assert (<= 0 v1474 ) )
              (assert (= v1474 v499 ) )
              (declare-fun v1475 () UInt )
              (assert (<= 0 v1475 ) )
              (assert (= v1475 v611 ) )
              (declare-fun v1476 () UInt )
              (assert (<= 0 v1476 ) )
              (assert (= v1476 v502 ) )
              (declare-fun v1477 () UInt )
              (assert (<= 0 v1477 ) )
              (assert (= v1477 v527 ) )
              (declare-fun v1478 () UInt )
              (assert (<= 0 v1478 ) )
              (assert (= v1478 v505 ) )
              (declare-fun v1479 () Bool )
              (assert true )
              (assert (= v1479 (= v1478 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1479 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v788 () T0 )
              (assert (and true true ) )
              (assert (= v609 (T5_setApprovalForAll0_113 v788 ) ) )
              (assert (= 0 pv_net1452 ) )
              (declare-fun v843 () Address )
              (assert true )
              (assert (= v843 (T0_elem0 v788 ) ) )
              (declare-fun v844 () Bool )
              (assert true )
              (assert (= v844 (T0_elem1 v788 ) ) )
              (declare-fun v845 () Bool )
              (assert true )
              (assert (= v845 (= v608 v498 ) ) )
              (declare-fun v846 () Bool )
              (assert true )
              (assert (= v846 (= v608 v497 ) ) )
              (declare-fun v847 () Bool )
              (assert true )
              (assert (= v847 (ite v845 true v846 ) ) )
              (declare-fun v848 () T4 )
              (assert (T4_inv v848 ) )
              (assert (= v848 (select map0_1 v608 ) ) )
              (declare-fun v849 () Bool )
              (assert true )
              (assert (= v849 (match v848 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v850 () Bool )
              (assert true )
              (assert (= v850 (ite v847 true v849 ) ) )
              (assert v850 )
              (declare-fun v851 () Bool )
              (assert true )
              (assert (= v851 true ) )
              (declare-fun v852 () Bool )
              (assert true )
              (assert (= v852 v851 ) )
              (declare-fun map0_2 () (Array Address T4 ) )
              (assert (= map0_2 (store map0_1 v843 (T4_Some v844 ) ) ) )
              (declare-fun v1481 () Address )
              (assert true )
              (assert (= v1481 v497 ) )
              (declare-fun v1482 () Address )
              (assert true )
              (assert (= v1482 v498 ) )
              (declare-fun v1483 () UInt )
              (assert (<= 0 v1483 ) )
              (assert (= v1483 v610 ) )
              (declare-fun v1484 () UInt )
              (assert (<= 0 v1484 ) )
              (assert (= v1484 v499 ) )
              (declare-fun v1485 () UInt )
              (assert (<= 0 v1485 ) )
              (assert (= v1485 v499 ) )
              (declare-fun v1486 () UInt )
              (assert (<= 0 v1486 ) )
              (assert (= v1486 v611 ) )
              (declare-fun v1487 () UInt )
              (assert (<= 0 v1487 ) )
              (assert (= v1487 v502 ) )
              (declare-fun v1488 () UInt )
              (assert (<= 0 v1488 ) )
              (assert (= v1488 v527 ) )
              (declare-fun v1489 () UInt )
              (assert (<= 0 v1489 ) )
              (assert (= v1489 v505 ) )
              (declare-fun v1490 () Bool )
              (assert true )
              (assert (= v1490 (= v1489 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1490 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v876 () T2 )
              (assert (and true true (<= 0 (T2_elem2 v876 ) ) ) )
              (assert (= v609 (T5_transferFrom0_113 v876 ) ) )
              (assert (= 0 pv_net1452 ) )
              (declare-fun v947 () Address )
              (assert true )
              (assert (= v947 (T2_elem0 v876 ) ) )
              (declare-fun v948 () Address )
              (assert true )
              (assert (= v948 (T2_elem1 v876 ) ) )
              (declare-fun v949 () UInt )
              (assert (<= 0 v949 ) )
              (assert (= v949 (T2_elem2 v876 ) ) )
              (declare-fun v950 () Bool )
              (assert true )
              (assert (= v950 (= v947 v498 ) ) )
              (declare-fun v951 () Bool )
              (assert true )
              (assert (= v951 (= v947 v497 ) ) )
              (declare-fun v952 () Bool )
              (assert true )
              (assert (= v952 (ite v950 true v951 ) ) )
              (declare-fun v953 () T4 )
              (assert (T4_inv v953 ) )
              (assert (= v953 (select map0_1 v947 ) ) )
              (declare-fun v954 () Bool )
              (assert true )
              (assert (= v954 (match v953 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v955 () Bool )
              (assert true )
              (assert (= v955 (ite v952 true v954 ) ) )
              (assert v955 )
              (declare-fun v956 () Bool )
              (assert true )
              (assert (= v956 (= v949 0 ) ) )
              (assert v956 )
              (declare-fun v957 () Bool )
              (assert true )
              (assert (= v957 true ) )
              (declare-fun v958 () Bool )
              (assert true )
              (assert (= v958 v957 ) )
              (declare-fun v1491 () Address )
              (assert true )
              (assert (= v1491 v948 ) )
              (declare-fun v1492 () Address )
              (assert true )
              (assert (= v1492 v948 ) )
              (declare-fun v1493 () UInt )
              (assert (<= 0 v1493 ) )
              (assert (= v1493 v610 ) )
              (declare-fun v1494 () UInt )
              (assert (<= 0 v1494 ) )
              (assert (= v1494 v499 ) )
              (declare-fun v1495 () UInt )
              (assert (<= 0 v1495 ) )
              (assert (= v1495 v499 ) )
              (declare-fun v1496 () UInt )
              (assert (<= 0 v1496 ) )
              (assert (= v1496 v611 ) )
              (declare-fun v1497 () UInt )
              (assert (<= 0 v1497 ) )
              (assert (= v1497 v502 ) )
              (declare-fun v1498 () UInt )
              (assert (<= 0 v1498 ) )
              (assert (= v1498 v527 ) )
              (declare-fun v1499 () UInt )
              (assert (<= 0 v1499 ) )
              (assert (= v1499 v505 ) )
              (declare-fun v1500 () Bool )
              (assert true )
              (assert (= v1500 (= v1499 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1500 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v608 () Address )
            (assert true )
            (declare-fun v609 () T5 )
            (assert (T5_inv v609 ) )
            (declare-fun pv_net1501 () UInt )
            (assert (<= 0 pv_net1501 ) )
            (declare-fun pv_tok1503 () Token )
            (assert true )
            (declare-fun pv_ks1502 () (Array Token UInt ) )
            (assert (<= 0 (select pv_ks1502 pv_tok1503 ) ) )
            (declare-fun v1504 () Address )
            (assert true )
            (declare-fun v1505 () Address )
            (assert true )
            (declare-fun v1506 () Address )
            (assert true )
            (declare-fun v1507 () Address )
            (assert true )
            (declare-fun v1508 () Address )
            (assert true )
            (declare-fun v610 () UInt )
            (assert (<= 0 v610 ) )
            (declare-fun v611 () UInt )
            (assert (<= 0 v611 ) )
            (declare-fun v338 () Bool )
            (assert true )
            (assert (= v610 (+ v499 1 ) ) )
            (assert (= v611 (+ v502 1 ) ) )
            (push 1 ) ;; {
              (declare-fun v612 () T1 )
              (assert (and true (<= 0 (T1_elem1 v612 ) ) ) )
              (assert (= v609 (T5_approve0_113 v612 ) ) )
              (assert (= 0 pv_net1501 ) )
              (declare-fun v632 () Address )
              (assert true )
              (assert (= v632 (T1_elem0 v612 ) ) )
              (declare-fun v633 () UInt )
              (assert (<= 0 v633 ) )
              (assert (= v633 (T1_elem1 v612 ) ) )
              (declare-fun v634 () Bool )
              (assert true )
              (assert (= v634 (= v608 v498 ) ) )
              (declare-fun v635 () Bool )
              (assert true )
              (assert (= v635 (= v608 v497 ) ) )
              (declare-fun v636 () Bool )
              (assert true )
              (assert (= v636 (ite v634 true v635 ) ) )
              (declare-fun v637 () T4 )
              (assert (T4_inv v637 ) )
              (assert (= v637 (select map0_1 v608 ) ) )
              (declare-fun v638 () Bool )
              (assert true )
              (assert (= v638 (match v637 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v639 () Bool )
              (assert true )
              (assert (= v639 (ite v636 true v638 ) ) )
              (assert v639 )
              (declare-fun v640 () Bool )
              (assert true )
              (assert (= v640 (= v633 0 ) ) )
              (assert v640 )
              (declare-fun v641 () Bool )
              (assert true )
              (assert (= v641 true ) )
              (declare-fun v642 () Bool )
              (assert true )
              (assert (= v642 v641 ) )
              (declare-fun v1509 () Address )
              (assert true )
              (assert (= v1509 v632 ) )
              (declare-fun v1510 () Address )
              (assert true )
              (assert (= v1510 v498 ) )
              (declare-fun v1511 () UInt )
              (assert (<= 0 v1511 ) )
              (assert (= v1511 v610 ) )
              (declare-fun v1512 () UInt )
              (assert (<= 0 v1512 ) )
              (assert (= v1512 v499 ) )
              (declare-fun v1513 () UInt )
              (assert (<= 0 v1513 ) )
              (assert (= v1513 v499 ) )
              (declare-fun v1514 () UInt )
              (assert (<= 0 v1514 ) )
              (assert (= v1514 v611 ) )
              (declare-fun v1515 () UInt )
              (assert (<= 0 v1515 ) )
              (assert (= v1515 v502 ) )
              (declare-fun v1516 () UInt )
              (assert (<= 0 v1516 ) )
              (assert (= v1516 v527 ) )
              (declare-fun v1517 () UInt )
              (assert (<= 0 v1517 ) )
              (assert (= v1517 v505 ) )
              (declare-fun v1518 () Bool )
              (assert true )
              (assert (= v1518 (= v1517 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1518 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v700 () T2 )
              (assert (and true true (<= 0 (T2_elem2 v700 ) ) ) )
              (assert (= v609 (T5_safeTransferFrom0_113 v700 ) ) )
              (assert (= 0 pv_net1501 ) )
              (declare-fun v737 () Address )
              (assert true )
              (assert (= v737 (T2_elem0 v700 ) ) )
              (declare-fun v738 () Address )
              (assert true )
              (assert (= v738 (T2_elem1 v700 ) ) )
              (declare-fun v739 () UInt )
              (assert (<= 0 v739 ) )
              (assert (= v739 (T2_elem2 v700 ) ) )
              (declare-fun v740 () Bool )
              (assert true )
              (assert (= v740 (= v737 v498 ) ) )
              (declare-fun v741 () Bool )
              (assert true )
              (assert (= v741 (= v737 v497 ) ) )
              (declare-fun v742 () Bool )
              (assert true )
              (assert (= v742 (ite v740 true v741 ) ) )
              (declare-fun v743 () T4 )
              (assert (T4_inv v743 ) )
              (assert (= v743 (select map0_1 v737 ) ) )
              (declare-fun v744 () Bool )
              (assert true )
              (assert (= v744 (match v743 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v745 () Bool )
              (assert true )
              (assert (= v745 (ite v742 true v744 ) ) )
              (assert v745 )
              (declare-fun v746 () Bool )
              (assert true )
              (assert (= v746 (= v739 0 ) ) )
              (assert v746 )
              (declare-fun v747 () Bool )
              (assert true )
              (assert (= v747 true ) )
              (declare-fun v748 () Bool )
              (assert true )
              (assert (= v748 v747 ) )
              (declare-fun v1519 () Address )
              (assert true )
              (assert (= v1519 v738 ) )
              (declare-fun v1520 () Address )
              (assert true )
              (assert (= v1520 v738 ) )
              (declare-fun v1521 () UInt )
              (assert (<= 0 v1521 ) )
              (assert (= v1521 v610 ) )
              (declare-fun v1522 () UInt )
              (assert (<= 0 v1522 ) )
              (assert (= v1522 v499 ) )
              (declare-fun v1523 () UInt )
              (assert (<= 0 v1523 ) )
              (assert (= v1523 v499 ) )
              (declare-fun v1524 () UInt )
              (assert (<= 0 v1524 ) )
              (assert (= v1524 v611 ) )
              (declare-fun v1525 () UInt )
              (assert (<= 0 v1525 ) )
              (assert (= v1525 v502 ) )
              (declare-fun v1526 () UInt )
              (assert (<= 0 v1526 ) )
              (assert (= v1526 v527 ) )
              (declare-fun v1527 () UInt )
              (assert (<= 0 v1527 ) )
              (assert (= v1527 v505 ) )
              (declare-fun v1528 () Bool )
              (assert true )
              (assert (= v1528 (= v1527 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1528 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v788 () T0 )
              (assert (and true true ) )
              (assert (= v609 (T5_setApprovalForAll0_113 v788 ) ) )
              (assert (= 0 pv_net1501 ) )
              (declare-fun v843 () Address )
              (assert true )
              (assert (= v843 (T0_elem0 v788 ) ) )
              (declare-fun v844 () Bool )
              (assert true )
              (assert (= v844 (T0_elem1 v788 ) ) )
              (declare-fun v845 () Bool )
              (assert true )
              (assert (= v845 (= v608 v498 ) ) )
              (declare-fun v846 () Bool )
              (assert true )
              (assert (= v846 (= v608 v497 ) ) )
              (declare-fun v847 () Bool )
              (assert true )
              (assert (= v847 (ite v845 true v846 ) ) )
              (declare-fun v848 () T4 )
              (assert (T4_inv v848 ) )
              (assert (= v848 (select map0_1 v608 ) ) )
              (declare-fun v849 () Bool )
              (assert true )
              (assert (= v849 (match v848 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v850 () Bool )
              (assert true )
              (assert (= v850 (ite v847 true v849 ) ) )
              (assert v850 )
              (declare-fun v851 () Bool )
              (assert true )
              (assert (= v851 true ) )
              (declare-fun v852 () Bool )
              (assert true )
              (assert (= v852 v851 ) )
              (declare-fun map0_2 () (Array Address T4 ) )
              (assert (= map0_2 (store map0_1 v843 (T4_Some v844 ) ) ) )
              (declare-fun v1530 () Address )
              (assert true )
              (assert (= v1530 v497 ) )
              (declare-fun v1531 () Address )
              (assert true )
              (assert (= v1531 v498 ) )
              (declare-fun v1532 () UInt )
              (assert (<= 0 v1532 ) )
              (assert (= v1532 v610 ) )
              (declare-fun v1533 () UInt )
              (assert (<= 0 v1533 ) )
              (assert (= v1533 v499 ) )
              (declare-fun v1534 () UInt )
              (assert (<= 0 v1534 ) )
              (assert (= v1534 v499 ) )
              (declare-fun v1535 () UInt )
              (assert (<= 0 v1535 ) )
              (assert (= v1535 v611 ) )
              (declare-fun v1536 () UInt )
              (assert (<= 0 v1536 ) )
              (assert (= v1536 v502 ) )
              (declare-fun v1537 () UInt )
              (assert (<= 0 v1537 ) )
              (assert (= v1537 v527 ) )
              (declare-fun v1538 () UInt )
              (assert (<= 0 v1538 ) )
              (assert (= v1538 v505 ) )
              (declare-fun v1539 () Bool )
              (assert true )
              (assert (= v1539 (= v1538 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1539 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v876 () T2 )
              (assert (and true true (<= 0 (T2_elem2 v876 ) ) ) )
              (assert (= v609 (T5_transferFrom0_113 v876 ) ) )
              (assert (= 0 pv_net1501 ) )
              (declare-fun v947 () Address )
              (assert true )
              (assert (= v947 (T2_elem0 v876 ) ) )
              (declare-fun v948 () Address )
              (assert true )
              (assert (= v948 (T2_elem1 v876 ) ) )
              (declare-fun v949 () UInt )
              (assert (<= 0 v949 ) )
              (assert (= v949 (T2_elem2 v876 ) ) )
              (declare-fun v950 () Bool )
              (assert true )
              (assert (= v950 (= v947 v498 ) ) )
              (declare-fun v951 () Bool )
              (assert true )
              (assert (= v951 (= v947 v497 ) ) )
              (declare-fun v952 () Bool )
              (assert true )
              (assert (= v952 (ite v950 true v951 ) ) )
              (declare-fun v953 () T4 )
              (assert (T4_inv v953 ) )
              (assert (= v953 (select map0_1 v947 ) ) )
              (declare-fun v954 () Bool )
              (assert true )
              (assert (= v954 (match v953 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
              (declare-fun v955 () Bool )
              (assert true )
              (assert (= v955 (ite v952 true v954 ) ) )
              (assert v955 )
              (declare-fun v956 () Bool )
              (assert true )
              (assert (= v956 (= v949 0 ) ) )
              (assert v956 )
              (declare-fun v957 () Bool )
              (assert true )
              (assert (= v957 true ) )
              (declare-fun v958 () Bool )
              (assert true )
              (assert (= v958 v957 ) )
              (declare-fun v1540 () Address )
              (assert true )
              (assert (= v1540 v948 ) )
              (declare-fun v1541 () Address )
              (assert true )
              (assert (= v1541 v948 ) )
              (declare-fun v1542 () UInt )
              (assert (<= 0 v1542 ) )
              (assert (= v1542 v610 ) )
              (declare-fun v1543 () UInt )
              (assert (<= 0 v1543 ) )
              (assert (= v1543 v499 ) )
              (declare-fun v1544 () UInt )
              (assert (<= 0 v1544 ) )
              (assert (= v1544 v499 ) )
              (declare-fun v1545 () UInt )
              (assert (<= 0 v1545 ) )
              (assert (= v1545 v611 ) )
              (declare-fun v1546 () UInt )
              (assert (<= 0 v1546 ) )
              (assert (= v1546 v502 ) )
              (declare-fun v1547 () UInt )
              (assert (<= 0 v1547 ) )
              (assert (= v1547 v527 ) )
              (declare-fun v1548 () UInt )
              (assert (<= 0 v1548 ) )
              (assert (= v1548 v505 ) )
              (declare-fun v1549 () Bool )
              (assert true )
              (assert (= v1549 (= v1548 0 ) ) )
              (push 1 ) ;; {
                (assert (not v1549 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (pop 1 ) ;; }
        (push 1 ) ;; {
          (declare-fun map0_1 () (Array Address T4 ) )
          (declare-fun v497 () Address )
          (assert true )
          (declare-fun v498 () Address )
          (assert true )
          (declare-fun v499 () UInt )
          (assert (<= 0 v499 ) )
          (assert (<= v499 dlc_UInt_max ) )
          (declare-fun v500 () UInt )
          (assert (<= 0 v500 ) )
          (assert (<= v500 dlc_UInt_max ) )
          (declare-fun v501 () UInt )
          (assert (<= 0 v501 ) )
          (assert (<= v501 dlc_UInt_max ) )
          (declare-fun v502 () UInt )
          (assert (<= 0 v502 ) )
          (assert (<= v502 dlc_UInt_max ) )
          (declare-fun v503 () UInt )
          (assert (<= 0 v503 ) )
          (assert (<= v503 dlc_UInt_max ) )
          (declare-fun v504 () UInt )
          (assert (<= 0 v504 ) )
          (assert (<= v504 dlc_UInt_max ) )
          (declare-fun v505 () UInt )
          (assert (<= 0 v505 ) )
          (assert (<= v505 dlc_UInt_max ) )
          (declare-fun v507 () Bool )
          (assert true )
          (assert (= v507 (= v505 0 ) ) )
          (assert v507 )
          (assert (not true ) )
          (push 1 ) ;; {
            (declare-fun v1551 () Address )
            (assert true )
            (declare-fun v1552 () Address )
            (assert true )
            (declare-fun v1553 () Address )
            (assert true )
            (declare-fun v1554 () Address )
            (assert true )
            (declare-fun v1555 () Address )
            (assert true )
            (declare-fun v971 () UInt )
            (assert (<= 0 v971 ) )
            (declare-fun v972 () Bool )
            (assert true )
            (assert (= v972 (= v971 0 ) ) )
            (assert v972 )
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v1556 () Address )
            (assert true )
            (declare-fun v1557 () Address )
            (assert true )
            (declare-fun v1558 () Address )
            (assert true )
            (declare-fun v1559 () Address )
            (assert true )
            (declare-fun v1560 () Address )
            (assert true )
            (declare-fun v973 () Address )
            (assert true )
            (declare-fun v974 () Bool )
            (assert true )
            (assert (= v974 (= v973 v498 ) ) )
            (declare-fun v975 () UInt )
            (assert (<= 0 v975 ) )
            (assert (= v975 (ite v974 1 0 ) ) )
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v1561 () Address )
            (assert true )
            (declare-fun v1562 () Address )
            (assert true )
            (declare-fun v1563 () Address )
            (assert true )
            (declare-fun v1564 () Address )
            (assert true )
            (declare-fun v1565 () Address )
            (assert true )
            (declare-fun v976 () UInt )
            (assert (<= 0 v976 ) )
            (declare-fun v977 () Bool )
            (assert true )
            (assert (= v977 (= v976 0 ) ) )
            (assert v977 )
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v1566 () Address )
            (assert true )
            (declare-fun v1567 () Address )
            (assert true )
            (declare-fun v1568 () Address )
            (assert true )
            (declare-fun v1569 () Address )
            (assert true )
            (declare-fun v1570 () Address )
            (assert true )
            (declare-fun v978 () Address )
            (assert true )
            (declare-fun v979 () Address )
            (assert true )
            (declare-fun v980 () Bool )
            (assert true )
            (assert (= v980 (= v498 v978 ) ) )
            (declare-fun v981 () T4 )
            (assert (T4_inv v981 ) )
            (assert (= v981 (select map0_1 v979 ) ) )
            (declare-fun v982 () Bool )
            (assert true )
            (assert (= v982 (match v981 (((T4_None T4_None_pv ) false ) ((T4_Some T4_Some_pv ) T4_Some_pv ) ) ) ) )
            (declare-fun v983 () Bool )
            (assert true )
            (assert (= v983 (ite v980 v982 false ) ) )
            (pop 1 ) ;; }
          (declare-fun v985 () Bool )
          (assert true )
          (assert (= v985 (= 0 v505 ) ) )
          (push 1 ) ;; {
            (assert (not v985 ) )
            (check-sat-using (try-for default 10 ) )
            ;; unsat
            (pop 1 ) ;; }
          (assert v985 )
          (pop 1 ) ;; }
        (pop 1 ) ;; }
      (pop 1 ) ;; }
    (pop 1 ) ;; }
  (pop 1 ) ;; }
(exit )
